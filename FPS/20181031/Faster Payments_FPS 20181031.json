{"paragraphs":[{"title":"Submit Faster Payment","text":"%angular\n<div  id=\"submit-fp-container\">\n<div ng-show=\"result.show\" ng-class=\"{'fp-submit-status-container-failed': !result.success, 'fp-submit-status-container': result.success}\">\n    <div class=\"result-header\">{{result.text}}</div>\n    <div class=\"result-details row\" ng-show=\"result.show\">\n        <div class=\"col-xs-3\">\n            <label>PaymentId: </label>\n            <div>{{result.paymentId}}</div>\n         </div>\n        <div class=\"col-xs-3\">\n            <label>Status: </label>\n            <div>{{result.txSts}}</div>\n        </div>\n        <div class=\"col-xs-3\"> \n            <label>Status Reason: </label>\n            <div>{{result.stsRsn}}</div>\n        </div>\n    </div>\n</div>\n\n<form name=\"fpPutForm\" id=\"post-fp-form\">\n    <div class= \"form-group\">\n        <div class=\"row\">\n                <!-- UserName -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"username\">Username: </label>\n                    <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" ng-model=\"data.username\">\n                </div>\n\n                <!-- Password -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"password\">Password: </label>\n                    <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" ng-model=\"data.password\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-4 form-group\">\n            <!-- payment Type -->\n               <label for=\"paymentType\">Payment Type: </label>\n                <select class=\"form-control\" id=\"paymentType\" ng-model=\"data.paymentType\">\n                    <option selected value=\"SIP\">Single Inmediate Payment</option>\n                    <option value=\"FDP\">Forward Dated Payment</option>\n                    <option value=\"SO\">Standing Order</option>\n                </select>\n            </div>\n        </div> \n    </div>\n\n    <div class= \"form-group\"> \n        <div class=\"row\">\n        <!-- Amount -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.amount.$valid && fpPutForm.amount.$dirty}\" >\n                <label for=\"amount\">Amount: </label>\n                <input type=\"number\" name=\"amount\" class=\"form-control\" id=\"intrbksttlamt\" ng-model=\"data.intrbksttlamt\" required ng-min=0 step=\"0.01\">\n                <div class=\"invalid-feedback\" ng-show=\"!fpPutForm.amount.$valid && fpPutForm.amount.$dirty\">\n                    Amount is required\n                </div>\n            </div>\n        <!-- Currency -->\n             <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.currency.$valid && fpPutForm.currency.$dirty}\">\n                <label for=\"currency\">Currency: </label>\n                <input type=\"text\" name=\"currency\" class=\"form-control\" id=\"currency\" ng-model=\"data.currency\" required=\"true\" ng-minlength=\"3\" ng-maxlength=\"3\" \n                ng-pattern=\"/^[A-Z]{3}$/\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.currency.$error.required && fpPutForm.currency.$dirty\">\n                    Curreny is required\n                </div>\n                <div class=\"invalid-feedback\" ng-show=\"(fpPutForm.currency.$error.minlength || fpPutForm.currency.$error.maxlength || fpPutForm.currency.$error.pattern) && !fpPutForm.currency.$error.required && fpPutForm.currency.$dirty\">\n                    Wrong currency format\n                </div>\n            </div>\n      \n        </div>\n    </div>\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Reference Info -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.referenceInformation.$valid && fpPutForm.referenceInformation.$dirty}\" >\n                <label for=\"referenceInformation\">Reference Information: </label>\n                <input type=\"text\" name=\"referenceInformation\" class=\"form-control\" id=\"referenceInformation\" ng-model=\"data.referenceInformation\" ng-maxlength=\"18\">\n                <div class=\"invalid-feedback\" ng-show=\"!fpPutForm.referenceInformation.$valid && fpPutForm.endtoendid.$dirty\">\n                    Maximum length is 18 characters\n                </div>\n            </div>\n        <!-- End to End Id -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.endtoendid.$valid && fpPutForm.endtoendid.$dirty}\">\n                <label for=\"endtoendid\">End to End Id: </label>\n                <input type=\"text\" name=\"endtoendid\" class=\"form-control\" id=\"endtoendid\" ng-model=\"data.endtoendid\" ng-maxlength=\"31\">\n                 <div class=\"invalid-feedback\" ng-show=\"!fpPutForm.endtoendid.$valid && fpPutForm.endtoendid.$dirty\">\n                    Maximum length is 31 characters\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">  \n        <!-- Channel -->\n        <div class=\"row\">\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.channel.$valid && fpPutForm.channel.$dirty}\">\n                <label for=\"channel\">Channel </label>\n                <select class=\"form-control\" id=\"channel\" ng-model=\"data.channel\" required=\"true\">\n                    <option selected value=\"PHONE\">Phone</option>\n                    <option value=\"INTERNET\">Internet</option>\n                    <option value=\"BRANCH\">Branch</option>\n                    <option value=\"LETTER\">Letter</option>\n                    <option value=\"EMAIL\">Email</option>\n                    <option value=\"MOBILE\">Mobile</option>\n                </select>\n            </div>\n        <!-- Purpose -->\n        <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.purpose.$valid && fpPutForm.purpose.$dirty}\">\n                <label for=\"purpose\">Purpose </label>\n                <input type=\"text\" name=\"purpose\" class=\"form-control\" id=\"purpose\" ng-model=\"data.purpose\" ng-maxlength=\"18\">\n            </div>\n        </div>\n    </div>\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Debtor Details -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.dbtrNm.$valid && fpPutForm.dbtrNm.$dirty}\">\n                <label for=\"dbtrNm\">Debtor Name: </label>\n                <input type=\"text\" name=\"dbtrNm\" class=\"form-control\" id=\"dbtrNm\" ng-model=\"data.dbtrNm\" ng-maxlength=\"255\" required=\"true\">\n            </div>\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.dbtrPstlAdr.$valid && fpPutForm.dbtrPstlAdr.$dirty}\">\n                <label for=\"dbtrPstlAdr\">Debtor Postal Address: </label>\n                <input type=\"text\" name=\"dbtrPstlAdr\" class=\"form-control\" id=\"dbtrPstlAdr\" ng-model=\"data.dbtrPstlAdr\" ng-maxlength=\"255\">\n            </div>\n        </div>\n    </div>\n\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Debtor Accounts-->\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.debtor.$valid && fpPutForm.debtor.$dirty}\" >\n                <label for=\"debtor\">Debtor Sort Code: </label>\n                <input type=\"text\" name=\"debtor\" class=\"form-control\" id=\"debtor\" ng-model=\"data.debtor\" required=\"true\" ng-maxlength=\"255\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtor.$error.required && fpPutForm.debtor.$dirty\">\n                    Debtor Sort Code is required\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.debtorAccount.$valid && fpPutForm.debtorAccount.$dirty}\">\n                <label for=\"debtorAccount\">Debtor Account: </label>\n                <input type=\"text\" name=\"debtorAccount\" class=\"form-control\" id=\"debtorAccount\" ng-model=\"data.debtorAccount\" required=\"true\" ng-maxlength=\"30\" ng-pattern=\"/^[0-9]*$/\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtorAccount.$error.required && fpPutForm.debtorAccount.$dirty\">\n                    Debtor Account is required\n                </div>\n                 <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtorAccount.$error.pattern && fpPutForm.debtorAccount.$dirty\">\n                    wrong format\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.debtorAccountId.$valid && fpPutForm.debtorAccountId.$dirty}\">\n                <label for=\"debtorAccountId\">Debtor Internal Acc Id: </label>\n                <input type=\"text\" name=\"debtorAccountId\" class=\"form-control\" id=\"debtorAccountId\" ng-model=\"data.debtorAccountId\" required=\"true\" ng-maxlength=\"255\">\n                 <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtorAccountId.$error.required && fpPutForm.debtorAccountId.$dirty\">\n                    Debtor Internal Account ID is required\n                </div>\n            </div>\n        </div> \n    </div>\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Ceditor Details -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrNm.$valid && fpPutForm.cdtrNm.$dirty}\">\n                <label for=\"cdtrNm\">Creditor Name: </label>\n                <input type=\"text\" name=\"cdtrNm\" class=\"form-control\" id=\"cdtrNm\" ng-model=\"data.cdtrNm\" ng-maxlength=\"255\">\n            </div>\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrPstlAdr.$valid && fpPutForm.cdtrPstlAdr.$dirty}\">\n                <label for=\"cdtrPstlAdr\">Creditor Postal Address: </label>\n                <input type=\"text\" name=\"cdtrPstlAdr\" class=\"form-control\" id=\"cdtrPstlAdr\" ng-model=\"data.cdtrPstlAdr\" ng-maxlength=\"255\">\n            </div>\n        </div>\n    </div>\n\n\n     <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Creditor Accounts -->\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrAgt.$valid && fpPutForm.cdtrAgt.$dirty}\" >\n                <label for=\"cdtrAgt\">Creditor Sort Code: </label>\n                <input type=\"text\" name=\"cdtrAgt\" class=\"form-control\" id=\"cdtrAgt\" ng-model=\"data.cdtrAgt\" required=\"true\" ng-maxlength=\"255\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.cdtrAgt.$error.required && fpPutForm.cdtrAgt.$dirty\">\n                    Creditor Sort Code is required\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrAcct.$valid && fpPutForm.cdtrAcct.$dirty}\">\n                <label for=\"cdtrAcct\">Creditor Account: </label>\n                <input type=\"text\" name=\"cdtrAcct\" class=\"form-control\" id=\"cdtrAcct\" ng-model=\"data.cdtrAcct\" required=\"true\" ng-maxlength=\"30\" ng-pattern=\"/^[0-9]*$/\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.cdtrAcct.$error.required && fpPutForm.cdtrAcct.$dirty\">\n                    Creditor Account is required\n                </div>\n                 <div class=\"invalid-feedback\" ng-show=\"fpPutForm.cdtrAcct.$error.pattern && fpPutForm.cdtrAcct.$dirty\">\n                    wrong format\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrAcctId.$valid && fpPutForm.cdtrAcctId.$dirty}\">\n                <label for=\"cdtrAcctId\">Creditor Internal Acc Id: </label>\n                <input type=\"text\" name=\"cdtrAcctId\" class=\"form-control\" id=\"cdtrAcctId\" ng-model=\"data.cdtrAcctId\" ng-maxlength=\"255\">\n            </div>\n        </div> \n    </div>\n  \n </div>\n  <button type=\"submit\" class=\"btn btn-primary\" onclick=\"submit_faster_payment()\" ng-disabled=\"submit.inprogress\"> {{submit.text}}</button>\n  \n</form>\n</div>\n\n<div class=\"clear-form-button\">\n  <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<style media=\"screen\" type=\"text/css\">\n\n.fp-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.fp-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#submit-fp-container{\n    margin-top:20px; \n    margin-bottom:20px;\n    width: 98%;\n}\n\n\n.clear-form-button{\n    display: inline;\n    float: right;\n}\n\n.invalid-feedback{\n    width: 100%;\n    margin-top: .55rem;\n    font-size: 80%;\n    color: #dc3545;\n}\n</style>\n\n\n\n\n\n<script>\n\n    angular.element(document).ready(function () {\n        console.log('init');\n        init_send_payment();\n        init_search_fp();\n        init_send_return();\n        init_search_errors();\n        init_sanctions();\n        init_sanctions_api();\n        init_search_usm();\n    });\n\n\n    function getStringValue(val){\n        if (typeof(val) == \"undefined\" || val == null || val === \"\") return \"\"\n        return \"\\'\" + val + \"\\'\";\n    }\n\n    function getLikeValue(val){\n        if (typeof(val) == \"undefined\" || val == null || val === \"\") return \"\"\n        return \"\\'%\" + val.toUpperCase() + \"%\\'\"; \n    }\n\n    function composeDateTimeQuery(dateElementName, timeElementName, columnName){\n        var date = document.getElementById(dateElementName).value;\n        var time = document.getElementById(timeElementName).value;\n        var datetimequery = \"\";\n        var datetimeval = \"\";\n        if (date != \"\")\n        {\n            if (time != \"\")\n            {\n                datetimequery = columnName + \" = \";\n                datetimeval = \"\\'\" + date + \" \" + time + \"\\'\";\n            }else{\n                datetimequery = \"substring(\" + columnName + \", 0, 10) = \";\n                datetimeval =  \"\\'\" + date + \"\\'\" ;\n            }\n        }\n        return {\n            datetimequery : datetimequery,\n            datetimeval: datetimeval\n        }\n    }\n\n\n    function composeDateQuery(dateElementName, columnName){\n        var date = document.getElementById(dateElementName).value;\n        var datetimequery = \"\";\n        var datetimeval = \"\";\n        if (date != \"\")\n        {    \n            datetimequery = \"substring(\" + columnName + \", 0, 10) = \";\n            datetimeval =  \"\\'\" + date + \"\\'\" ;\n        }\n        return {\n            datetimequery : datetimequery,\n            datetimeval: datetimeval\n        }\n    }\n\n    function do_ajax_query(scope, data, url) {\n        console.log('Ajax Query for: ' + url);\n        scope.result.show = false;\n        scope.submit.inprogress = true;\n        scope.submit.text = \"Submitting...\"\n\n\n    \n\n        var tokenData = JSON.stringify(\n        {\n            'usr': scope.data.username,\n            'pwd' : scope.data.password\n        });\n        \n    \n\n        var xhrToken = new XMLHttpRequest();\n        var urlToken = \"https://api-0.node.consul:8285/bifrost/login/\";\n        console.log('URL Token: ' + urlToken);\n        xhrToken.timeout = 4000; //4 seconds\n        xhrToken.open(\"POST\", urlToken, true);\n        xhrToken.setRequestHeader(\"Content-type\", \"application/json\");\n        var tokenResponse = null;    \n        xhrToken.onreadystatechange = function () {\n            if (xhrToken.readyState === 4) {\n                if (xhrToken.status === 200){\n                    var jsonToken = JSON.parse(xhrToken.responseText);\n                    tokenResponse = jsonToken.access_token;\n                    console.log('Token retrieved: ' + tokenResponse);\n                    \n                    var xhr = new XMLHttpRequest();\n                    var urlPayment = \"https://api-0.node.consul:8080/bifrost/fps/\" + url;\n                    console.log('URL: ' + urlPayment);\n                    xhr.timeout = 4000; //4 seconds\n                    xhr.open(\"POST\", urlPayment, true);\n                    xhr.setRequestHeader(\"Content-type\", \"application/json\");\n                    xhr.setRequestHeader(\"Authorization\", \"Bearer \" + tokenResponse);\n                    xhr.onreadystatechange = function () {\n                        if (xhr.readyState === 4) {\n                            if (xhr.status === 200){\n                                var json = JSON.parse(xhr.responseText);\n                                if (json.txSts != \"RJCT\"){\n                                     scope.result.text = \"Payment Submitted\";\n                                }else{\n                                    scope.result.text = \"Submission Failed\"\n                                }\n                                scope.result.paymentId = json.paymentId;\n                                scope.result.txSts = json.txSts;\n                                scope.result.stsRsn = json.stsRsn;\n                                scope.result.success = json.txSts != \"RJCT\"\n                                scope.result.show = true;\n                                scope.$apply(); \n                            } else {\n                                scope.result.text = \"Submission Failed\"\n                                scope.result.paymentId = \"\"\n                                scope.result.txSts = \"\";\n                                scope.result.stsRsn = xhr.responseText;\n                                scope.result.success = false;\n                                scope.result.show = true;\n                                scope.$apply(); \n                            }\n                        }\n                        scope.submit.inprogress = false;\n                        scope.submit.text = \"Submit Payment\"\n                    };\n\n                    console.log('sending data');\n                    console.log(data);\n                    xhr.send(data);\n                }\n            }\n            scope.submit.inprogress = false;\n            scope.submit.text = \"Submit Payment\";\n        };\n\n        console.log('sending token data: ' + tokenData);\n        xhrToken.send(tokenData);\n    }\n\n\n    function  init_send_payment() {\n        var scope = angular.element($(\"#post-fp-form\")).scope();\n\n        if (typeof(scope.result)=== \"undefined\"){\n        scope.result = {\n            text: \"\",\n            paymentId: \"\",\n            txSts: \"\",\n            stsRsn: \"\",\n            success: false,\n            show: false\n        }\n        scope.submit = {\n            inprogress: false,\n            text: 'Submit Payment'\n        }\n        scope.data = {}\n        scope.data.paymentType = \"SIP\";\n        scope.data.channel = \"PHONE\";\n        scope.clearForm = function(){\n                var scope = angular.element($(\"#post-fp-form\")).scope();\n                scope.data = {\n                    paymentType: \"SIP\"\n                }\n            }; \n        }\n    }\n\n    function submit_faster_payment() {\n        //get angular scope\n        var scope = angular.element($(\"#post-fp-form\")).scope();\n        if (scope.fpPutForm.$valid) {\n            var data = JSON.stringify(\n            {\n                'paymentType': scope.data.paymentType,\n                'intrBkSttlmAmtCcy':  scope.data.currency,\n                'intrBkSttlmAmt' : scope.data.intrbksttlamt,\n                'dbtrAgt': scope.data.debtor,\n                'dbtrAcct': scope.data.debtorAccount,\n                'dbtrAcctId': scope.data.debtorAccountId,\n                'dbtrNm': scope.data.dbtrNm,\n                'dbtrPstlAdr': [\n                    scope.data.dbtrPstlAdr\n                ],\n                'endToEndId': scope.data.endtoendid,\n                'cdtrAgt': scope.data.cdtrAgt,\n                'cdtrAcct': scope.data.cdtrAcct,\n                'cdtrAcctId': scope.data.cdtrAcctId,\n                'cdtrNm': scope.data.cdtrNm,\n                'cdtrPstlAdr': [\n                    scope.data.cdtrPstlAdr\n                ],\n                'returnedPaymentId': scope.data.paymentReturnId,\n                'paymentReturnCode':  scope.data.paymentReturnCode,\n                'referenceInformation': scope.data.referenceInformation,\n                'ctgyPurp': scope.data.channel,\n                'purp': scope.data.purp\n            });\n            do_ajax_query(scope, data, \"sendPayment\");\n        } else {\n            scope.fpPutForm.$setDirty();\n            scope.fpPutForm.amount.$dirty = true;\n            scope.fpPutForm.paymentType.$dirty = true;\n            scope.$apply();\n            console.log('set dirty');\n        }\n    }\n\n</script>\n\n\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":701,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div  id=\"submit-fp-container\">\n<div ng-show=\"result.show\" ng-class=\"{'fp-submit-status-container-failed': !result.success, 'fp-submit-status-container': result.success}\">\n    <div class=\"result-header\">{{result.text}}</div>\n    <div class=\"result-details row\" ng-show=\"result.show\">\n        <div class=\"col-xs-3\">\n            <label>PaymentId: </label>\n            <div>{{result.paymentId}}</div>\n         </div>\n        <div class=\"col-xs-3\">\n            <label>Status: </label>\n            <div>{{result.txSts}}</div>\n        </div>\n        <div class=\"col-xs-3\"> \n            <label>Status Reason: </label>\n            <div>{{result.stsRsn}}</div>\n        </div>\n    </div>\n</div>\n\n<form name=\"fpPutForm\" id=\"post-fp-form\">\n    <div class= \"form-group\">\n        <div class=\"row\">\n                <!-- UserName -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"username\">Username: </label>\n                    <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" ng-model=\"data.username\">\n                </div>\n\n                <!-- Password -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"password\">Password: </label>\n                    <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" ng-model=\"data.password\">\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-xs-4 form-group\">\n            <!-- payment Type -->\n               <label for=\"paymentType\">Payment Type: </label>\n                <select class=\"form-control\" id=\"paymentType\" ng-model=\"data.paymentType\">\n                    <option selected value=\"SIP\">Single Inmediate Payment</option>\n                    <option value=\"FDP\">Forward Dated Payment</option>\n                    <option value=\"SO\">Standing Order</option>\n                </select>\n            </div>\n        </div> \n    </div>\n\n    <div class= \"form-group\"> \n        <div class=\"row\">\n        <!-- Amount -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.amount.$valid && fpPutForm.amount.$dirty}\" >\n                <label for=\"amount\">Amount: </label>\n                <input type=\"number\" name=\"amount\" class=\"form-control\" id=\"intrbksttlamt\" ng-model=\"data.intrbksttlamt\" required ng-min=0 step=\"0.01\">\n                <div class=\"invalid-feedback\" ng-show=\"!fpPutForm.amount.$valid && fpPutForm.amount.$dirty\">\n                    Amount is required\n                </div>\n            </div>\n        <!-- Currency -->\n             <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.currency.$valid && fpPutForm.currency.$dirty}\">\n                <label for=\"currency\">Currency: </label>\n                <input type=\"text\" name=\"currency\" class=\"form-control\" id=\"currency\" ng-model=\"data.currency\" required=\"true\" ng-minlength=\"3\" ng-maxlength=\"3\" \n                ng-pattern=\"/^[A-Z]{3}$/\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.currency.$error.required && fpPutForm.currency.$dirty\">\n                    Curreny is required\n                </div>\n                <div class=\"invalid-feedback\" ng-show=\"(fpPutForm.currency.$error.minlength || fpPutForm.currency.$error.maxlength || fpPutForm.currency.$error.pattern) && !fpPutForm.currency.$error.required && fpPutForm.currency.$dirty\">\n                    Wrong currency format\n                </div>\n            </div>\n      \n        </div>\n    </div>\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Reference Info -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.referenceInformation.$valid && fpPutForm.referenceInformation.$dirty}\" >\n                <label for=\"referenceInformation\">Reference Information: </label>\n                <input type=\"text\" name=\"referenceInformation\" class=\"form-control\" id=\"referenceInformation\" ng-model=\"data.referenceInformation\" ng-maxlength=\"18\">\n                <div class=\"invalid-feedback\" ng-show=\"!fpPutForm.referenceInformation.$valid && fpPutForm.endtoendid.$dirty\">\n                    Maximum length is 18 characters\n                </div>\n            </div>\n        <!-- End to End Id -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.endtoendid.$valid && fpPutForm.endtoendid.$dirty}\">\n                <label for=\"endtoendid\">End to End Id: </label>\n                <input type=\"text\" name=\"endtoendid\" class=\"form-control\" id=\"endtoendid\" ng-model=\"data.endtoendid\" ng-maxlength=\"31\">\n                 <div class=\"invalid-feedback\" ng-show=\"!fpPutForm.endtoendid.$valid && fpPutForm.endtoendid.$dirty\">\n                    Maximum length is 31 characters\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"form-group\">  \n        <!-- Channel -->\n        <div class=\"row\">\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.channel.$valid && fpPutForm.channel.$dirty}\">\n                <label for=\"channel\">Channel </label>\n                <select class=\"form-control\" id=\"channel\" ng-model=\"data.channel\" required=\"true\">\n                    <option selected value=\"PHONE\">Phone</option>\n                    <option value=\"INTERNET\">Internet</option>\n                    <option value=\"BRANCH\">Branch</option>\n                    <option value=\"LETTER\">Letter</option>\n                    <option value=\"EMAIL\">Email</option>\n                    <option value=\"MOBILE\">Mobile</option>\n                </select>\n            </div>\n        <!-- Purpose -->\n        <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.purpose.$valid && fpPutForm.purpose.$dirty}\">\n                <label for=\"purpose\">Purpose </label>\n                <input type=\"text\" name=\"purpose\" class=\"form-control\" id=\"purpose\" ng-model=\"data.purpose\" ng-maxlength=\"18\">\n            </div>\n        </div>\n    </div>\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Debtor Details -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.dbtrNm.$valid && fpPutForm.dbtrNm.$dirty}\">\n                <label for=\"dbtrNm\">Debtor Name: </label>\n                <input type=\"text\" name=\"dbtrNm\" class=\"form-control\" id=\"dbtrNm\" ng-model=\"data.dbtrNm\" ng-maxlength=\"255\" required=\"true\">\n            </div>\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.dbtrPstlAdr.$valid && fpPutForm.dbtrPstlAdr.$dirty}\">\n                <label for=\"dbtrPstlAdr\">Debtor Postal Address: </label>\n                <input type=\"text\" name=\"dbtrPstlAdr\" class=\"form-control\" id=\"dbtrPstlAdr\" ng-model=\"data.dbtrPstlAdr\" ng-maxlength=\"255\">\n            </div>\n        </div>\n    </div>\n\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Debtor Accounts-->\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.debtor.$valid && fpPutForm.debtor.$dirty}\" >\n                <label for=\"debtor\">Debtor Sort Code: </label>\n                <input type=\"text\" name=\"debtor\" class=\"form-control\" id=\"debtor\" ng-model=\"data.debtor\" required=\"true\" ng-maxlength=\"255\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtor.$error.required && fpPutForm.debtor.$dirty\">\n                    Debtor Sort Code is required\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.debtorAccount.$valid && fpPutForm.debtorAccount.$dirty}\">\n                <label for=\"debtorAccount\">Debtor Account: </label>\n                <input type=\"text\" name=\"debtorAccount\" class=\"form-control\" id=\"debtorAccount\" ng-model=\"data.debtorAccount\" required=\"true\" ng-maxlength=\"30\" ng-pattern=\"/^[0-9]*$/\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtorAccount.$error.required && fpPutForm.debtorAccount.$dirty\">\n                    Debtor Account is required\n                </div>\n                 <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtorAccount.$error.pattern && fpPutForm.debtorAccount.$dirty\">\n                    wrong format\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.debtorAccountId.$valid && fpPutForm.debtorAccountId.$dirty}\">\n                <label for=\"debtorAccountId\">Debtor Internal Acc Id: </label>\n                <input type=\"text\" name=\"debtorAccountId\" class=\"form-control\" id=\"debtorAccountId\" ng-model=\"data.debtorAccountId\" required=\"true\" ng-maxlength=\"255\">\n                 <div class=\"invalid-feedback\" ng-show=\"fpPutForm.debtorAccountId.$error.required && fpPutForm.debtorAccountId.$dirty\">\n                    Debtor Internal Account ID is required\n                </div>\n            </div>\n        </div> \n    </div>\n\n    <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Ceditor Details -->\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrNm.$valid && fpPutForm.cdtrNm.$dirty}\">\n                <label for=\"cdtrNm\">Creditor Name: </label>\n                <input type=\"text\" name=\"cdtrNm\" class=\"form-control\" id=\"cdtrNm\" ng-model=\"data.cdtrNm\" ng-maxlength=\"255\">\n            </div>\n            <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrPstlAdr.$valid && fpPutForm.cdtrPstlAdr.$dirty}\">\n                <label for=\"cdtrPstlAdr\">Creditor Postal Address: </label>\n                <input type=\"text\" name=\"cdtrPstlAdr\" class=\"form-control\" id=\"cdtrPstlAdr\" ng-model=\"data.cdtrPstlAdr\" ng-maxlength=\"255\">\n            </div>\n        </div>\n    </div>\n\n\n     <div class= \"form-group\">\n        <div class=\"row\">\n        <!-- Creditor Accounts -->\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrAgt.$valid && fpPutForm.cdtrAgt.$dirty}\" >\n                <label for=\"cdtrAgt\">Creditor Sort Code: </label>\n                <input type=\"text\" name=\"cdtrAgt\" class=\"form-control\" id=\"cdtrAgt\" ng-model=\"data.cdtrAgt\" required=\"true\" ng-maxlength=\"255\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.cdtrAgt.$error.required && fpPutForm.cdtrAgt.$dirty\">\n                    Creditor Sort Code is required\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrAcct.$valid && fpPutForm.cdtrAcct.$dirty}\">\n                <label for=\"cdtrAcct\">Creditor Account: </label>\n                <input type=\"text\" name=\"cdtrAcct\" class=\"form-control\" id=\"cdtrAcct\" ng-model=\"data.cdtrAcct\" required=\"true\" ng-maxlength=\"30\" ng-pattern=\"/^[0-9]*$/\">\n                <div class=\"invalid-feedback\" ng-show=\"fpPutForm.cdtrAcct.$error.required && fpPutForm.cdtrAcct.$dirty\">\n                    Creditor Account is required\n                </div>\n                 <div class=\"invalid-feedback\" ng-show=\"fpPutForm.cdtrAcct.$error.pattern && fpPutForm.cdtrAcct.$dirty\">\n                    wrong format\n                </div>\n            </div>\n            <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !fpPutForm.cdtrAcctId.$valid && fpPutForm.cdtrAcctId.$dirty}\">\n                <label for=\"cdtrAcctId\">Creditor Internal Acc Id: </label>\n                <input type=\"text\" name=\"cdtrAcctId\" class=\"form-control\" id=\"cdtrAcctId\" ng-model=\"data.cdtrAcctId\" ng-maxlength=\"255\">\n            </div>\n        </div> \n    </div>\n  \n </div>\n  <button type=\"submit\" class=\"btn btn-primary\" onclick=\"submit_faster_payment()\" ng-disabled=\"submit.inprogress\"> {{submit.text}}</button>\n  \n</form>\n</div>\n\n<div class=\"clear-form-button\">\n  <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<style media=\"screen\" type=\"text/css\">\n\n.fp-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.fp-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#submit-fp-container{\n    margin-top:20px; \n    margin-bottom:20px;\n    width: 98%;\n}\n\n\n.clear-form-button{\n    display: inline;\n    float: right;\n}\n\n.invalid-feedback{\n    width: 100%;\n    margin-top: .55rem;\n    font-size: 80%;\n    color: #dc3545;\n}\n</style>\n\n\n\n\n\n<script>\n\n    angular.element(document).ready(function () {\n        console.log('init');\n        init_send_payment();\n        init_search_fp();\n        init_send_return();\n        init_search_errors();\n        init_sanctions();\n        init_sanctions_api();\n        init_search_usm();\n    });\n\n\n    function getStringValue(val){\n        if (typeof(val) == \"undefined\" || val == null || val === \"\") return \"\"\n        return \"\\'\" + val + \"\\'\";\n    }\n\n    function getLikeValue(val){\n        if (typeof(val) == \"undefined\" || val == null || val === \"\") return \"\"\n        return \"\\'%\" + val.toUpperCase() + \"%\\'\"; \n    }\n\n    function composeDateTimeQuery(dateElementName, timeElementName, columnName){\n        var date = document.getElementById(dateElementName).value;\n        var time = document.getElementById(timeElementName).value;\n        var datetimequery = \"\";\n        var datetimeval = \"\";\n        if (date != \"\")\n        {\n            if (time != \"\")\n            {\n                datetimequery = columnName + \" = \";\n                datetimeval = \"\\'\" + date + \" \" + time + \"\\'\";\n            }else{\n                datetimequery = \"substring(\" + columnName + \", 0, 10) = \";\n                datetimeval =  \"\\'\" + date + \"\\'\" ;\n            }\n        }\n        return {\n            datetimequery : datetimequery,\n            datetimeval: datetimeval\n        }\n    }\n\n\n    function composeDateQuery(dateElementName, columnName){\n        var date = document.getElementById(dateElementName).value;\n        var datetimequery = \"\";\n        var datetimeval = \"\";\n        if (date != \"\")\n        {    \n            datetimequery = \"substring(\" + columnName + \", 0, 10) = \";\n            datetimeval =  \"\\'\" + date + \"\\'\" ;\n        }\n        return {\n            datetimequery : datetimequery,\n            datetimeval: datetimeval\n        }\n    }\n\n    function do_ajax_query(scope, data, url) {\n        console.log('Ajax Query for: ' + url);\n        scope.result.show = false;\n        scope.submit.inprogress = true;\n        scope.submit.text = \"Submitting...\"\n\n\n    \n\n        var tokenData = JSON.stringify(\n        {\n            'usr': scope.data.username,\n            'pwd' : scope.data.password\n        });\n        \n    \n\n        var xhrToken = new XMLHttpRequest();\n        var urlToken = \"https://api-0.node.consul:8285/bifrost/login/\";\n        console.log('URL Token: ' + urlToken);\n        xhrToken.timeout = 4000; //4 seconds\n        xhrToken.open(\"POST\", urlToken, true);\n        xhrToken.setRequestHeader(\"Content-type\", \"application/json\");\n        var tokenResponse = null;    \n        xhrToken.onreadystatechange = function () {\n            if (xhrToken.readyState === 4) {\n                if (xhrToken.status === 200){\n                    var jsonToken = JSON.parse(xhrToken.responseText);\n                    tokenResponse = jsonToken.access_token;\n                    console.log('Token retrieved: ' + tokenResponse);\n                    \n                    var xhr = new XMLHttpRequest();\n                    var urlPayment = \"https://api-0.node.consul:8080/bifrost/fps/\" + url;\n                    console.log('URL: ' + urlPayment);\n                    xhr.timeout = 4000; //4 seconds\n                    xhr.open(\"POST\", urlPayment, true);\n                    xhr.setRequestHeader(\"Content-type\", \"application/json\");\n                    xhr.setRequestHeader(\"Authorization\", \"Bearer \" + tokenResponse);\n                    xhr.onreadystatechange = function () {\n                        if (xhr.readyState === 4) {\n                            if (xhr.status === 200){\n                                var json = JSON.parse(xhr.responseText);\n                                if (json.txSts != \"RJCT\"){\n                                     scope.result.text = \"Payment Submitted\";\n                                }else{\n                                    scope.result.text = \"Submission Failed\"\n                                }\n                                scope.result.paymentId = json.paymentId;\n                                scope.result.txSts = json.txSts;\n                                scope.result.stsRsn = json.stsRsn;\n                                scope.result.success = json.txSts != \"RJCT\"\n                                scope.result.show = true;\n                                scope.$apply(); \n                            } else {\n                                scope.result.text = \"Submission Failed\"\n                                scope.result.paymentId = \"\"\n                                scope.result.txSts = \"\";\n                                scope.result.stsRsn = xhr.responseText;\n                                scope.result.success = false;\n                                scope.result.show = true;\n                                scope.$apply(); \n                            }\n                        }\n                        scope.submit.inprogress = false;\n                        scope.submit.text = \"Submit Payment\"\n                    };\n\n                    console.log('sending data');\n                    console.log(data);\n                    xhr.send(data);\n                }\n            }\n            scope.submit.inprogress = false;\n            scope.submit.text = \"Submit Payment\";\n        };\n\n        console.log('sending token data: ' + tokenData);\n        xhrToken.send(tokenData);\n    }\n\n\n    function  init_send_payment() {\n        var scope = angular.element($(\"#post-fp-form\")).scope();\n\n        if (typeof(scope.result)=== \"undefined\"){\n        scope.result = {\n            text: \"\",\n            paymentId: \"\",\n            txSts: \"\",\n            stsRsn: \"\",\n            success: false,\n            show: false\n        }\n        scope.submit = {\n            inprogress: false,\n            text: 'Submit Payment'\n        }\n        scope.data = {}\n        scope.data.paymentType = \"SIP\";\n        scope.data.channel = \"PHONE\";\n        scope.clearForm = function(){\n                var scope = angular.element($(\"#post-fp-form\")).scope();\n                scope.data = {\n                    paymentType: \"SIP\"\n                }\n            }; \n        }\n    }\n\n    function submit_faster_payment() {\n        //get angular scope\n        var scope = angular.element($(\"#post-fp-form\")).scope();\n        if (scope.fpPutForm.$valid) {\n            var data = JSON.stringify(\n            {\n                'paymentType': scope.data.paymentType,\n                'intrBkSttlmAmtCcy':  scope.data.currency,\n                'intrBkSttlmAmt' : scope.data.intrbksttlamt,\n                'dbtrAgt': scope.data.debtor,\n                'dbtrAcct': scope.data.debtorAccount,\n                'dbtrAcctId': scope.data.debtorAccountId,\n                'dbtrNm': scope.data.dbtrNm,\n                'dbtrPstlAdr': [\n                    scope.data.dbtrPstlAdr\n                ],\n                'endToEndId': scope.data.endtoendid,\n                'cdtrAgt': scope.data.cdtrAgt,\n                'cdtrAcct': scope.data.cdtrAcct,\n                'cdtrAcctId': scope.data.cdtrAcctId,\n                'cdtrNm': scope.data.cdtrNm,\n                'cdtrPstlAdr': [\n                    scope.data.cdtrPstlAdr\n                ],\n                'returnedPaymentId': scope.data.paymentReturnId,\n                'paymentReturnCode':  scope.data.paymentReturnCode,\n                'referenceInformation': scope.data.referenceInformation,\n                'ctgyPurp': scope.data.channel,\n                'purp': scope.data.purp\n            });\n            do_ajax_query(scope, data, \"sendPayment\");\n        } else {\n            scope.fpPutForm.$setDirty();\n            scope.fpPutForm.amount.$dirty = true;\n            scope.fpPutForm.paymentType.$dirty = true;\n            scope.$apply();\n            console.log('set dirty');\n        }\n    }\n\n</script>"}]},"apps":[],"jobName":"paragraph_1541606594754_-1090735136","id":"20171130-075231_1037782649","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1351"},{"title":"Return Faster Payment","text":"%angular\n<div id=\"return-fp\"> \n    <div ng-show=\"result.show\" ng-class=\"{'fp-submit-status-container-failed': !result.success, 'fp-submit-status-container': result.success}\">\n        <div class=\"result-header\">{{result.text}}</div>\n        <div class=\"result-details row\" ng-show=\"result.show\">\n            <div class=\"col-xs-3\">\n                <label>PaymentId: </label>\n                <div>{{result.paymentId}}</div>\n            </div>\n            <div class=\"col-xs-3\">\n                <label>Status: </label>\n                <div>{{result.txSts}}</div>\n            </div>\n            <div class=\"col-xs-3\"> \n                <label>Status Reason: </label>\n                <div>{{result.stsRsn}}</div>\n            </div>\n        </div>\n    </div>\n\n\n    <form style=\"width:90%\" name=\"fpReturnForm\" id=\"return-fp-form\">\n    \n    <div class= \"form-group\">\n            <div class=\"row\">\n            <!-- Payment Return Id -->\n                <div class=\"col-xs-6 form-group\" ng-class=\"{'has-error': !fpReturnForm.paymentReturnId.$valid}\">\n                    <label for=\"paymentReturnId\">Return Payment Id: </label>\n                    <input type=\"text\" name=\"paymentReturnId\" class=\"form-control\" id=\"paymentReturnId\" ng-model=\"data.paymentReturnId\" ng-maxlength=\"255\">\n                    <div ng-show=\"!fpReturnForm.paymentReturnId.$valid\">\n                        Payment Return Id must be present for Return payment type and must not be present for Single Immediate Payment type.\n                    </div>\n                </div>\n            <!-- Payment Return Code -->\n                <div class=\"col-xs-6 form-group\" ng-class=\"{'has-error': !fpReturnForm.paymentReturnCode.$valid && fpReturnForm.paymentReturnCode.$dirty }\">\n                    <label for=\"paymentReturnCode\">Payment Return Code: </label>\n                    <select class=\"form-control\" ng-model=\"data.paymentReturnCode\">\n                        <option selected value=\"00000001\">Unknown Beneficiary Sort Code or Account Number</option>\n                        <option value=\"00000002\">Beneficiary Account Closed</option>\n                        <option value=\"00000003\">Beneficiary Account Stopped</option>\n                        <option value=\"00000004\">Beneficiary Deceased</option>\n                        <option value=\"00000005\">Reference Information Field Needed To indentify Account</option>\n                        <option value=\"00000006\">Beneficiary Name Does Not Match Beneficiary Account Number</option>\n                        <option value=\"00000007\">Return Requested By Sender Of original Payment</option>\n                        <option value=\"00000008\">Account Is Not In Quoted Currency</option>\n                        <option value=\"00000009\">Beneficiary Not Expecting Funds/Instructed Return</option>\n                        <option value=\"00000010\">Terms and Conditions of Account Do Not Permit Crediting Those Funds</option>\n                        <option value=\"00000011\">Sending FPS Institution Action Required</option>\n                        <option value=\"00000012\">Account Transferred</option>\n                        <option value=\"00000013\">Payment Cannot be Applied Because of Beneficiary Sensitivities</option>\n                        <option value=\"00000014\">Other</option>\n                    </select>\n                </div>\n            </div> \n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"return_fp()\" ng-disabled=\"submit.inprogress\"> {{submit.text}}</button>\n    </form>\n</div>\n\n\n<script>\nfunction init_send_return(){\n    console.log('init return fp')\n    var scope = angular.element($(\"#return-fp\")).scope();\n \n    scope.submit = {\n        text: \"Return Payment\"\n    }\n\n    if (typeof(scope.result)=== \"undefined\"){\n        scope.result = {\n            text: \"\",\n            paymentId: \"\",\n            txSts: \"\",\n            stsRsn: \"\",\n            success: false,\n            show: false\n        }\n        scope.submit = {\n            inprogress: false,\n            text: 'Return Payment'\n        }\n        scope.data = {\n            paymentReturnId: \"\",\n            paymentReturnCode: \"00000001\"\n        }\n    }\n\n    scope.return_fp = function(){\n        var scope = angular.element($(\"#return-fp\")).scope();\n        var data = JSON.stringify(\n            {\n                'paymentType': \"RTN\",\n                'returnedPaymentId':scope.data.paymentReturnId,\n                'paymentReturnCode':  scope.data.paymentReturnCode,\n            });\n        do_ajax_query(scope, data, \"sendReturn\");\n    }\n}\n</script>\n<style>\n\n.fp-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 20px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.fp-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#return-fp{\n    width: 90%;\n    margin-top: 20px;\n}\n</style>\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"return-fp\"> \n    <div ng-show=\"result.show\" ng-class=\"{'fp-submit-status-container-failed': !result.success, 'fp-submit-status-container': result.success}\">\n        <div class=\"result-header\">{{result.text}}</div>\n        <div class=\"result-details row\" ng-show=\"result.show\">\n            <div class=\"col-xs-3\">\n                <label>PaymentId: </label>\n                <div>{{result.paymentId}}</div>\n            </div>\n            <div class=\"col-xs-3\">\n                <label>Status: </label>\n                <div>{{result.txSts}}</div>\n            </div>\n            <div class=\"col-xs-3\"> \n                <label>Status Reason: </label>\n                <div>{{result.stsRsn}}</div>\n            </div>\n        </div>\n    </div>\n\n\n    <form style=\"width:90%\" name=\"fpReturnForm\" id=\"return-fp-form\">\n    \n    <div class= \"form-group\">\n            <div class=\"row\">\n            <!-- Payment Return Id -->\n                <div class=\"col-xs-6 form-group\" ng-class=\"{'has-error': !fpReturnForm.paymentReturnId.$valid}\">\n                    <label for=\"paymentReturnId\">Return Payment Id: </label>\n                    <input type=\"text\" name=\"paymentReturnId\" class=\"form-control\" id=\"paymentReturnId\" ng-model=\"data.paymentReturnId\" ng-maxlength=\"255\">\n                    <div ng-show=\"!fpReturnForm.paymentReturnId.$valid\">\n                        Payment Return Id must be present for Return payment type and must not be present for Single Immediate Payment type.\n                    </div>\n                </div>\n            <!-- Payment Return Code -->\n                <div class=\"col-xs-6 form-group\" ng-class=\"{'has-error': !fpReturnForm.paymentReturnCode.$valid && fpReturnForm.paymentReturnCode.$dirty }\">\n                    <label for=\"paymentReturnCode\">Payment Return Code: </label>\n                    <select class=\"form-control\" ng-model=\"data.paymentReturnCode\">\n                        <option selected value=\"00000001\">Unknown Beneficiary Sort Code or Account Number</option>\n                        <option value=\"00000002\">Beneficiary Account Closed</option>\n                        <option value=\"00000003\">Beneficiary Account Stopped</option>\n                        <option value=\"00000004\">Beneficiary Deceased</option>\n                        <option value=\"00000005\">Reference Information Field Needed To indentify Account</option>\n                        <option value=\"00000006\">Beneficiary Name Does Not Match Beneficiary Account Number</option>\n                        <option value=\"00000007\">Return Requested By Sender Of original Payment</option>\n                        <option value=\"00000008\">Account Is Not In Quoted Currency</option>\n                        <option value=\"00000009\">Beneficiary Not Expecting Funds/Instructed Return</option>\n                        <option value=\"00000010\">Terms and Conditions of Account Do Not Permit Crediting Those Funds</option>\n                        <option value=\"00000011\">Sending FPS Institution Action Required</option>\n                        <option value=\"00000012\">Account Transferred</option>\n                        <option value=\"00000013\">Payment Cannot be Applied Because of Beneficiary Sensitivities</option>\n                        <option value=\"00000014\">Other</option>\n                    </select>\n                </div>\n            </div> \n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"return_fp()\" ng-disabled=\"submit.inprogress\"> {{submit.text}}</button>\n    </form>\n</div>\n\n\n<script>\nfunction init_send_return(){\n    console.log('init return fp')\n    var scope = angular.element($(\"#return-fp\")).scope();\n \n    scope.submit = {\n        text: \"Return Payment\"\n    }\n\n    if (typeof(scope.result)=== \"undefined\"){\n        scope.result = {\n            text: \"\",\n            paymentId: \"\",\n            txSts: \"\",\n            stsRsn: \"\",\n            success: false,\n            show: false\n        }\n        scope.submit = {\n            inprogress: false,\n            text: 'Return Payment'\n        }\n        scope.data = {\n            paymentReturnId: \"\",\n            paymentReturnCode: \"00000001\"\n        }\n    }\n\n    scope.return_fp = function(){\n        var scope = angular.element($(\"#return-fp\")).scope();\n        var data = JSON.stringify(\n            {\n                'paymentType': \"RTN\",\n                'returnedPaymentId':scope.data.paymentReturnId,\n                'paymentReturnCode':  scope.data.paymentReturnCode,\n            });\n        do_ajax_query(scope, data, \"sendReturn\");\n    }\n}\n</script>\n<style>\n\n.fp-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 20px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.fp-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#return-fp{\n    width: 90%;\n    margin-top: 20px;\n}\n</style>"}]},"apps":[],"jobName":"paragraph_1541606594755_-1091119884","id":"20171214-085949_2034234027","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1352"},{"text":"%angular\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","editorHide":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1541676184379_-826931266","id":"20181108-112304_405648438","dateCreated":"2018-11-08T11:23:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1353"},{"title":"Search Faster Payment","text":"%angular\r\n<div class=\"sfp-form-container\">\r\n<form>\r\n  <div class= \"form-group\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-3 form-group\">\r\n          <!-- payment id -->\r\n            <label for=\"s-paymentId\" id=\"paymentIdInput\">Payment Id: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"s-paymentId\" ng-model=\"data.paymentId\"></input>\r\n        </div>\r\n        <div class=\"col-xs-3 form-group\">\r\n             <label for=\"s-direction\" id=\"directionLabel\">Direction: </label>\r\n                <select class=\"form-control\" id=\"s-direction\" ng-model=\"data.direction\">\r\n                    <option selected value> -- select an option -- </option>\r\n                    <option value=\"'I'\">Inbound</option>\r\n                    <option value=\"'O'\">Outbound</option>\r\n                </select>\r\n        </div>\r\n        <div  class=\"col-xs-3 form-group\">\r\n            <label for=\"s-txstatus\" id=\"txstatusLabel\">Status: </label>\r\n            <select class=\"form-control\" id=\"s-txstatus\" ng-model=\"data.status\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'ACSP'\">Accepted</option>\r\n                <option value=\"'ACTC'\">Accepted with Qualification</option>\r\n                <option value=\"'RJCT'\">Rejected</option>\r\n                <option value=\"'SENT'\">Sent</option>\r\n                <option value=\"'RVSD'\">Reversed</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n\r\n   <div class=\"row\">\r\n       \r\n    <!-- debit/credit -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"s-cdtdbtind\" >Credit / Debit: </label>\r\n            <select class=\"form-control\" id=\"s-cdtdbtind\" ng-model=\"data.creditdebit\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'D'\">Debit</option>\r\n                <option value=\"'C'\">Credit</option>\r\n            </select>\r\n    </div>  \r\n    <div  class=\"col-xs-3 form-group\">\r\n      <!-- scheme -->   \r\n        <label for=\"s-paymentscheme\" >Scheme: </label>\r\n            <select class=\"form-control\" id=\"s-paymentscheme\" ng-model=\"data.scheme\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'pacs.002.001.06'\">pacs_002_001</option>\r\n                <option value=\"'pacs.004.001.06'\">pacs_004_001</option>\r\n                <option value=\"'pacs.007.001.06'\">pacs_007_001</option>\r\n                <option value=\"'pacs.008.001.06'\">pacs_008_001</option>\r\n                <option value=\"'pacs.009.001.06'\">pacs_009_001</option>\r\n            </select>\r\n    </div>\r\n</div>\r\n\r\n  <div class=\"row\">\r\n    <!-- FP Id -->\r\n         <div  class=\"col-xs-3 form-group\">\r\n              <label for=\"s-fpid\">FP Id: </label>\r\n              <input type=\"text\" class=\"form-control\" id=\"s-fpid\" ng-model=\"data.fpid\"></input>\r\n         </div>\r\n    <!-- TX Id -->\r\n         <div class=\"col-xs-3 form-group\">\r\n            <label for=\"s-txid\">Transaction ID: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"s-txid\" ng-model=\"data.txid\"></input>\r\n         </div>\r\n    <!-- End-to-end Id -->\r\n         <div class=\"col-xs-3 form-group\">\r\n            <label for=\"s-endtoendid\">End-to-end Id: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"s-endtoendid\" ng-model=\"data.endtoendid\"></input>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n  \r\n\r\n  <div class=\"row\">\r\n    <!-- amount -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"s-intrbksttlamt\">Settlement Amount: </label>\r\n        <input type=\"number\" class=\"form-control\" id=\"s-intrbksttlamt\" step=\"0.01\" min=\"0\" ng-model=\"data.amount\">\r\n    </div>\r\n    <!-- currency -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"s-intrbksttlccy\">Currency: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"s-intrbksttlccy\" ng-model=\"data.currency\"></input>\r\n    </div>\r\n</div>\r\n\r\n  <div class=\"row\">\r\n    <!-- timestamps --> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-credttm\">Credit Date: </label>\r\n         <input class=\"form-control\"  type=\"date\" name=\"s-credttm\" id=\"s-credttm\" ng-model=\"data.credttm\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-credttm2\">Credit Time: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-credttm2\" ng-model=\"data.credttm2\"></input>\r\n      </div>\r\n</div>\r\n\r\n\r\n  <div class=\"row\">\r\n    <!-- timestamps --> \r\n   \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-rcvddttm\">Received Timestamp: </label>\r\n         <input class=\"form-control\"  type=\"date\" name=\"s-rcvddttm\" id=\"s-rcvddttm\"  ng-model=\"data.rcvddttm\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-intrbksttldt\">Settlement Date: </label>\r\n         <input class=\"form-control\"  type=\"date\" name=\"s-intrbksttldt\"  id=\"s-intrbksttldt\" ng-model=\"data.intrbksttldt\"></input>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- creditor--> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtrname\">Creditor Name: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-cdtrname\"  ng-model=\"data.cdtrname\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtracct\">Creditor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-cdtracct\"  ng-model=\"data.cdtracct\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtrPstlAdr\">Creditor Postal Address: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"s-cdtrPstlAdr\" ng-model=\"data.cdtrPstlAdr\"></input>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- debtor--> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-dbtrnm\">Debtor Name: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-dbtrnm\" ng-model=\"data.dbtrnm\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-dbtracct\">Debtor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-dbtracct\" ng-model=\"data.dbtracct\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-dbtrPstlAdr\">Debtor Postal Address: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"s-dbtrPstlAdr\"  ng-model=\"data.dbtrPstlAdr\"></input>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <!-- debtor--> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtrrefinf\">Credit Information: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-cdtrrefinf\" ng-model=\"data.cdtrrefinf\"></input>\r\n    </div>\r\n</div>\r\n     \r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"doQuery()\"> Search</button>\r\n</form>\r\n\r\n<div class=\"clear-form-button\">\r\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\r\n</div>\r\n\r\n</div>\r\n<script>\r\n\r\nfunction init_search_fp(){\r\n\r\n    console.log('init fp search');\r\n    var scope = angular.element($(\"#paymentIdInput\")).scope();\r\n    scope.data = {};\r\n    \r\n    scope.clearForm = function(){\r\n        var scope = angular.element($(\"#paymentIdInput\")).scope();\r\n        scope.data = {\r\n            status: ''\r\n        };\r\n    }\r\n    \r\n    scope.doQuery = function(){\r\n        var scope = angular.element($(\"#paymentIdInput\")).scope();\r\n\r\n\r\n        var creditDateTime = composeDateTimeQuery('s-credttm', 's-credttm2', 'credttm');\r\n        var receivedDate = composeDateQuery('s-rcvddttm', 'rcvddttm');\r\n        var settlementDate = composeDateQuery('s-intrbksttldt', 'intrbksttldt');\r\n\r\n        var queryFields = [\"paymentId = \", \"direction = \", \"txstatus = \", \"fpid = \", \"txid =\", \"endtoendid = \", \"intrbksttlamt = \",\r\n            \"intrbksttlccy = \", \"paymentscheme = \", \"UPPER(cdtrnm) like \", \"cdtracct = \", \"UPPER(cdtrPstlAdr) like \", \"UPPER(dbtrnm) like \", \"dbtracct = \", \"UPPER(dbtrPstlAdr) like \", \"cdtdbtind = \", \r\n            \"UPPER(cdtrrefinf) like\", creditDateTime.datetimequery, receivedDate.datetimequery, settlementDate.datetimequery]\r\n        var values = [scope.data.paymentId, scope.data.direction, scope.data.status, getStringValue(scope.data.fpid), getStringValue(scope.data.txid), getStringValue(scope.data.endtoendid)\r\n            , scope.data.amount, getStringValue(scope.data.currency), scope.data.scheme\r\n            , getLikeValue(scope.data.cdtrname), scope.data.cdtracct, getLikeValue(scope.data.cdtrPstlAdr)\r\n            , getLikeValue(scope.data.dbtrnm), scope.data.dbtracct, getLikeValue(scope.data.dbtrPstlAdr) \r\n            , scope.data.creditdebit, getLikeValue(scope.data.cdtrrefinf), creditDateTime.datetimeval, receivedDate.datetimeval, settlementDate.datetimeval]\r\n        \r\n        var queryValues = queryFields.map(function(e, i) {\r\n            var field = e;\r\n            var value = values[i]\r\n            if (value === null || typeof(value) == 'undefined' || value === \"\" || value == \"'%%'\"){\r\n                return \"\";\r\n            }\r\n            return e + value;\r\n        });\r\n        var notEmptyQueryValues = queryValues.filter(function check(c) { if (c === \"\") {return false} return true })\r\n        \r\n        var queryString = \"\";\r\n        if (notEmptyQueryValues.length != 0){\r\n            queryString = \"where \" + notEmptyQueryValues.join(\" and \");\r\n        }\r\n\r\n        console.log(queryString);\r\n        scope.z.angularBind('query', queryString,'20171127-080322_240439795');\r\n        scope.z.runParagraph('20171127-080322_240439795');\r\n\r\n        }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style media=\"screen\" type=\"text/css\">\r\n\r\n\r\n.row{\r\n    /* margin-right: -15px; */\r\n    margin-left: -15px; \r\n}\r\n\r\n.sfp-form-container{\r\n    width: 98%;\r\n}\r\n\r\n</style>\r\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":692.813,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div class=\"sfp-form-container\">\r\n<form>\r\n  <div class= \"form-group\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-3 form-group\">\r\n          <!-- payment id -->\r\n            <label for=\"s-paymentId\" id=\"paymentIdInput\">Payment Id: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"s-paymentId\" ng-model=\"data.paymentId\"></input>\r\n        </div>\r\n        <div class=\"col-xs-3 form-group\">\r\n             <label for=\"s-direction\" id=\"directionLabel\">Direction: </label>\r\n                <select class=\"form-control\" id=\"s-direction\" ng-model=\"data.direction\">\r\n                    <option selected value> -- select an option -- </option>\r\n                    <option value=\"'I'\">Inbound</option>\r\n                    <option value=\"'O'\">Outbound</option>\r\n                </select>\r\n        </div>\r\n        <div  class=\"col-xs-3 form-group\">\r\n            <label for=\"s-txstatus\" id=\"txstatusLabel\">Status: </label>\r\n            <select class=\"form-control\" id=\"s-txstatus\" ng-model=\"data.status\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'ACSP'\">Accepted</option>\r\n                <option value=\"'ACTC'\">Accepted with Qualification</option>\r\n                <option value=\"'RJCT'\">Rejected</option>\r\n                <option value=\"'SENT'\">Sent</option>\r\n                <option value=\"'RVSD'\">Reversed</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n\r\n   <div class=\"row\">\r\n       \r\n    <!-- debit/credit -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"s-cdtdbtind\" >Credit / Debit: </label>\r\n            <select class=\"form-control\" id=\"s-cdtdbtind\" ng-model=\"data.creditdebit\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'D'\">Debit</option>\r\n                <option value=\"'C'\">Credit</option>\r\n            </select>\r\n    </div>  \r\n    <div  class=\"col-xs-3 form-group\">\r\n      <!-- scheme -->   \r\n        <label for=\"s-paymentscheme\" >Scheme: </label>\r\n            <select class=\"form-control\" id=\"s-paymentscheme\" ng-model=\"data.scheme\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'pacs.002.001.06'\">pacs_002_001</option>\r\n                <option value=\"'pacs.004.001.06'\">pacs_004_001</option>\r\n                <option value=\"'pacs.007.001.06'\">pacs_007_001</option>\r\n                <option value=\"'pacs.008.001.06'\">pacs_008_001</option>\r\n                <option value=\"'pacs.009.001.06'\">pacs_009_001</option>\r\n            </select>\r\n    </div>\r\n</div>\r\n\r\n  <div class=\"row\">\r\n    <!-- FP Id -->\r\n         <div  class=\"col-xs-3 form-group\">\r\n              <label for=\"s-fpid\">FP Id: </label>\r\n              <input type=\"text\" class=\"form-control\" id=\"s-fpid\" ng-model=\"data.fpid\"></input>\r\n         </div>\r\n    <!-- TX Id -->\r\n         <div class=\"col-xs-3 form-group\">\r\n            <label for=\"s-txid\">Transaction ID: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"s-txid\" ng-model=\"data.txid\"></input>\r\n         </div>\r\n    <!-- End-to-end Id -->\r\n         <div class=\"col-xs-3 form-group\">\r\n            <label for=\"s-endtoendid\">End-to-end Id: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"s-endtoendid\" ng-model=\"data.endtoendid\"></input>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n  \r\n\r\n  <div class=\"row\">\r\n    <!-- amount -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"s-intrbksttlamt\">Settlement Amount: </label>\r\n        <input type=\"number\" class=\"form-control\" id=\"s-intrbksttlamt\" step=\"0.01\" min=\"0\" ng-model=\"data.amount\">\r\n    </div>\r\n    <!-- currency -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"s-intrbksttlccy\">Currency: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"s-intrbksttlccy\" ng-model=\"data.currency\"></input>\r\n    </div>\r\n</div>\r\n\r\n  <div class=\"row\">\r\n    <!-- timestamps --> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-credttm\">Credit Date: </label>\r\n         <input class=\"form-control\"  type=\"date\" name=\"s-credttm\" id=\"s-credttm\" ng-model=\"data.credttm\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-credttm2\">Credit Time: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-credttm2\" ng-model=\"data.credttm2\"></input>\r\n      </div>\r\n</div>\r\n\r\n\r\n  <div class=\"row\">\r\n    <!-- timestamps --> \r\n   \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-rcvddttm\">Received Timestamp: </label>\r\n         <input class=\"form-control\"  type=\"date\" name=\"s-rcvddttm\" id=\"s-rcvddttm\"  ng-model=\"data.rcvddttm\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-intrbksttldt\">Settlement Date: </label>\r\n         <input class=\"form-control\"  type=\"date\" name=\"s-intrbksttldt\"  id=\"s-intrbksttldt\" ng-model=\"data.intrbksttldt\"></input>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- creditor--> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtrname\">Creditor Name: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-cdtrname\"  ng-model=\"data.cdtrname\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtracct\">Creditor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-cdtracct\"  ng-model=\"data.cdtracct\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtrPstlAdr\">Creditor Postal Address: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"s-cdtrPstlAdr\" ng-model=\"data.cdtrPstlAdr\"></input>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- debtor--> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-dbtrnm\">Debtor Name: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-dbtrnm\" ng-model=\"data.dbtrnm\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-dbtracct\">Debtor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-dbtracct\" ng-model=\"data.dbtracct\"></input>\r\n    </div>\r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-dbtrPstlAdr\">Debtor Postal Address: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"s-dbtrPstlAdr\"  ng-model=\"data.dbtrPstlAdr\"></input>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <!-- debtor--> \r\n    <div class=\"col-xs-3 form-group\">\r\n         <label for=\"s-cdtrrefinf\">Credit Information: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"s-cdtrrefinf\" ng-model=\"data.cdtrrefinf\"></input>\r\n    </div>\r\n</div>\r\n     \r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"doQuery()\"> Search</button>\r\n</form>\r\n\r\n<div class=\"clear-form-button\">\r\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\r\n</div>\r\n\r\n</div>\r\n<script>\r\n\r\nfunction init_search_fp(){\r\n\r\n    console.log('init fp search');\r\n    var scope = angular.element($(\"#paymentIdInput\")).scope();\r\n    scope.data = {};\r\n    \r\n    scope.clearForm = function(){\r\n        var scope = angular.element($(\"#paymentIdInput\")).scope();\r\n        scope.data = {\r\n            status: ''\r\n        };\r\n    }\r\n    \r\n    scope.doQuery = function(){\r\n        var scope = angular.element($(\"#paymentIdInput\")).scope();\r\n\r\n\r\n        var creditDateTime = composeDateTimeQuery('s-credttm', 's-credttm2', 'credttm');\r\n        var receivedDate = composeDateQuery('s-rcvddttm', 'rcvddttm');\r\n        var settlementDate = composeDateQuery('s-intrbksttldt', 'intrbksttldt');\r\n\r\n        var queryFields = [\"paymentId = \", \"direction = \", \"txstatus = \", \"fpid = \", \"txid =\", \"endtoendid = \", \"intrbksttlamt = \",\r\n            \"intrbksttlccy = \", \"paymentscheme = \", \"UPPER(cdtrnm) like \", \"cdtracct = \", \"UPPER(cdtrPstlAdr) like \", \"UPPER(dbtrnm) like \", \"dbtracct = \", \"UPPER(dbtrPstlAdr) like \", \"cdtdbtind = \", \r\n            \"UPPER(cdtrrefinf) like\", creditDateTime.datetimequery, receivedDate.datetimequery, settlementDate.datetimequery]\r\n        var values = [scope.data.paymentId, scope.data.direction, scope.data.status, getStringValue(scope.data.fpid), getStringValue(scope.data.txid), getStringValue(scope.data.endtoendid)\r\n            , scope.data.amount, getStringValue(scope.data.currency), scope.data.scheme\r\n            , getLikeValue(scope.data.cdtrname), scope.data.cdtracct, getLikeValue(scope.data.cdtrPstlAdr)\r\n            , getLikeValue(scope.data.dbtrnm), scope.data.dbtracct, getLikeValue(scope.data.dbtrPstlAdr) \r\n            , scope.data.creditdebit, getLikeValue(scope.data.cdtrrefinf), creditDateTime.datetimeval, receivedDate.datetimeval, settlementDate.datetimeval]\r\n        \r\n        var queryValues = queryFields.map(function(e, i) {\r\n            var field = e;\r\n            var value = values[i]\r\n            if (value === null || typeof(value) == 'undefined' || value === \"\" || value == \"'%%'\"){\r\n                return \"\";\r\n            }\r\n            return e + value;\r\n        });\r\n        var notEmptyQueryValues = queryValues.filter(function check(c) { if (c === \"\") {return false} return true })\r\n        \r\n        var queryString = \"\";\r\n        if (notEmptyQueryValues.length != 0){\r\n            queryString = \"where \" + notEmptyQueryValues.join(\" and \");\r\n        }\r\n\r\n        console.log(queryString);\r\n        scope.z.angularBind('query', queryString,'20171127-080322_240439795');\r\n        scope.z.runParagraph('20171127-080322_240439795');\r\n\r\n        }\r\n}\r\n\r\n\r\n\r\n</script>\r\n\r\n\r\n\r\n<style media=\"screen\" type=\"text/css\">\r\n\r\n\r\n.row{\r\n    /* margin-right: -15px; */\r\n    margin-left: -15px; \r\n}\r\n\r\n.sfp-form-container{\r\n    width: 98%;\r\n}\r\n\r\n</style>"}]},"apps":[],"jobName":"paragraph_1541606594756_-1093043629","id":"20171127-081307_530400055","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1354"},{"text":"%jdbc(hive)\nselect  \n    paymentid,\n    direction,\n    txstatus,\n    cdtdbtind,\n    paymentscheme,\n    fpid,\n    txid,\n    endtoendid,\n    paymenttype,\n    paymenttypecode,\n    poo,\n    cycleid,\n    credttm,\n    rcvddttm,\n    intrbksttldt,\n    intrbksttlamt,\n    intrbksttlccy,\n    instdamt,\n    instdccy,\n    xchgrate,\n    instrprty,\n    instrprty,\n    ctgypurp,\n    chrgbr,\n    chrginf1amt,\n    chrginf1ccy,\n    chrginf1bicfi,\n    chrginf1clrsysmmbid,\n    chrginf2amt,\n    chrginf2ccy,\n    chrginf2bicfi,\n    chrginf2clrsysmmbid,\n    chrginf3amt,\n    chrginf3ccy,\n    chrginf3bicfi,\n    chrginf3clrsysmmbid,\n    instdagt,\n    instgagt,\n    intrmydagt1,\n    intrmydagt2,\n    dbtrnm,\n    dbtrpstladr,\n    dbtracct,\n    dbtragt_clrsysmmbid,\n    dbtragt_bicfi,\n    cdtrnm,\n    cdtrpstladr,\n    cdtracct,\n    cdtragt_clrsysmmbid,\n    cdtragt_bicfi,\n    returnedfpid,\n    returncode,\n    rgltryrptg,\n    cdtrrefinf,\n    rmtinf\nfrom  fasterpayments.fpspayments\n${query}\n\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":true,"results":{"0":{"graph":{"mode":"table","height":340,"optionOpen":false}},"2":{"graph":{"mode":"table","height":300,"optionOpen":false}}},"enabled":true},"settings":{"params":{"freeSearch":"'1 or paymentId is null'","paymentId2":"2","paymentId":"","superhero":"paymentid","query":"","PaymentId":"","query1":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"paymentid\tdirection\ttxstatus\tcdtdbtind\tpaymentscheme\tfpid\ttxid\tendtoendid\tpaymenttype\tpaymenttypecode\tpoo\tcycleid\tcredttm\trcvddttm\tintrbksttldt\tintrbksttlamt\tintrbksttlccy\tinstdamt\tinstdccy\txchgrate\tinstrprty\tinstrprty\tctgypurp\tchrgbr\tchrginf1amt\tchrginf1ccy\tchrginf1bicfi\tchrginf1clrsysmmbid\tchrginf2amt\tchrginf2ccy\tchrginf2bicfi\tchrginf2clrsysmmbid\tchrginf3amt\tchrginf3ccy\tchrginf3bicfi\tchrginf3clrsysmmbid\tinstdagt\tinstgagt\tintrmydagt1\tintrmydagt2\tdbtrnm\tdbtrpstladr\tdbtracct\tdbtragt_clrsysmmbid\tdbtragt_bicfi\tcdtrnm\tcdtrpstladr\tcdtracct\tcdtragt_clrsysmmbid\tcdtragt_bicfi\treturnedfpid\treturncode\trgltryrptg\tcdtrrefinf\trmtinf\n176058587409612800\tO\tSENT\tD\tPACS_008_001_05\t1760585874096128001020180524826040082     \t176058587409612800\t176058587409612800\tSIP\tSIP\tfalse\tnull\t2018-05-24 11:18:38.831\tnull\tnull\t1.01\tGBP\tnull\tnull\tnull\tnull\tnull\tINTERNET\tSHAR\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tCaroline Gaw\tnull\t00000120\t040082\tnull\tChris Coombs\tnull\t12713463\t070116\tnull\tnull\tnull\tnull\tFPSTEST 101\tFPSTEST 101\n176058587409612800\tO\tACSP\tD\tpacs.008.001.05\t/FPID/1760585874096128001020180524826040082     \t176058587409612800\t176058587409612800\tSIP\tSIP\tfalse\tnull\t2018-05-24 11:18:38.831\tnull\tnull\t1.01\tGBP\tnull\tnull\tnull\tnull\tnull\tINTERNET\tSHAR\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tCaroline Gaw\tnull\t00000120\t040082\tnull\tChris Coombs\tnull\t12713463\t070116\tnull\tnull\tnull\tnull\tFPSTEST 101\tFPSTEST 101\n176058587409612800\tO\tSENT\tD\tPACS_008_001_05\t1760585874096128001020180524826040082     \t176058587409612800\t176058587409612800\tSIP\tSIP\tfalse\tnull\t2018-05-24 11:18:38.831\tnull\tnull\t1.01\tGBP\tnull\tnull\tnull\tnull\tnull\tINTERNET\tSHAR\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tCaroline Gaw\tnull\t00000120\t040082\tnull\tChris Coombs\tnull\t12713463\t070116\tnull\tnull\tnull\tnull\tFPSTEST 101\tFPSTEST 101\n176058587409612800\tO\tACSP\tD\tpacs.008.001.05\t1760585874096128001020180524826040082     \t176058587409612800\t176058587409612800\tSIP\tSIP\tfalse\tnull\t2018-05-24 11:18:38.831\tnull\tnull\t1.01\tGBP\tnull\tnull\tnull\tnull\tnull\tINTERNET\tSHAR\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tCaroline Gaw\tnull\t00000120\t040082\tnull\tChris Coombs\tnull\t12713463\t070116\tnull\tnull\tnull\tnull\tFPSTEST 101\tFPSTEST 101\n176058587409612800\tO\tSENT\tD\tPACS_008_001_05\t1760585874096128001020180524826040082     \t176058587409612800\t176058587409612800\tSIP\tSIP\tfalse\tnull\t2018-05-24 11:18:38.831\tnull\tnull\t1.01\tGBP\tnull\tnull\tnull\tnull\tnull\tINTERNET\tSHAR\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tCaroline Gaw\tnull\t00000120\t040082\tnull\tChris Coombs\tnull\t12713463\t070116\tnull\tnull\tnull\tnull\tFPSTEST 101\tFPSTEST 101\n176058587409612800\tO\tACSP\tD\tpacs.008.001.05\t1760585874096128001020180524826040082     \t176058587409612800\t176058587409612800\tSIP\tSIP\tfalse\tnull\t2018-05-24 11:18:38.831\tnull\tnull\t1.01\tGBP\tnull\tnull\tnull\tnull\tnull\tINTERNET\tSHAR\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tCaroline Gaw\tnull\t00000120\t040082\tnull\tChris Coombs\tnull\t12713463\t070116\tnull\tnull\tnull\tnull\tFPSTEST 101\tFPSTEST 101\n"}]},"apps":[],"jobName":"paragraph_1541606594757_-1093428378","id":"20171127-080322_240439795","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1355"},{"title":"Search For Raw Message Phoenix Query","text":"%angular\n<div  id=\"submit-searchFPSRowMessages-container\">\n\n    <form name=\"searchFPSRowMessagesForm\" id=\"post-searchFPSRowMessages-form\">\n        <div class= \"form-group\">\n            <div class=\"row\">\n                <!-- RowKey -->\n                <div class=\"col-xs-4 form-group\" >\n                    <label for=\"rowKey\">Payment Id: </label>\n                    <input type=\"text\" name=\"rowKey\" class=\"form-control\" id=\"rowKey\" ng-model=\"data.rowKey\">\n                </div>\n            \n            </div>\n\n            <button type=\"submit\" class=\"btn btn-primary\" onclick=\"submit_search_row_message()\">{{submit.text}}</button>\n        </div>\n        \n    </form>\n\n    <div class=\"clear-form-button\">\n      <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n    </div>\n</div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<style media=\"screen\" type=\"text/css\">\n\n.searchFPSRowMessages-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.searchFPSRowMessages-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#submit-searchFPSRowMessages-container{\n    margin-top:20px; \n    margin-bottom:20px;\n    width: 98%;\n}\n\n\n.clear-form-button{\n    display: inline;\n    float: right;\n}\n\n.invalid-feedback{\n    width: 100%;\n    margin-top: .55rem;\n    font-size: 80%;\n    color: #dc3545;\n}\n</style>\n\n\n\n\n\n<script>\n\n    angular.element(document).ready(function () {\n        console.log('init search fps row message');\n        init_searchFPSRowMessages();\n    });\n\n    function init_searchFPSRowMessages() {\n        var scope = angular.element($(\"#submit-searchFPSRowMessages-container\")).scope();\n        if (typeof(scope.result)=== \"undefined\") {\n            scope.result = {\n                text: \"\",\n                payment: \"\",\n                success: false\n            };\n\n            show = false;\n            scope.submit = {\n                inprogress: false,\n                text: 'Search Row Message'\n            };\n\n            scope.data = {};\n\n            scope.generateInputValues = function(scope) {\n                console.log('Initializing input values');\n                scope.data.direction = \"0\";\n            };\n\n            scope.generateInputValues(scope);\n\n            scope.clearForm = function(){\n                var scope = angular.element($(\"#submit-searchFPSRowMessages-container\")).scope();\n                scope.data = {};\n                scope.generateInputValues(scope);\n            };\n        }\n    }\n\n    function getObjStr(field, value, exactMatch){\n        var result = '{\"field\":';\n        result = result.concat('\"').concat(field).concat('\", \"value\":\"').concat(value).concat('\", \"exactMatch\":').concat(exactMatch).concat('}');\n        return result;\n    }\n\n    function checkAnyFieldFilled(scope) {\n        var result = [];\n\n        try {\n\n            if (scope.data.rowKey != null && scope.data.rowKey != undefined && scope.data.rowKey != '')\n                result.push(getObjStr(\"rowkey\", scope.data.rowKey.toString(), false));\n\n        } catch (err) {\n            console.error('Error parsing fields. Error message: ' + err);\n        }\n\n        console.log('Result: ' + result);\n\n        var results = JSON.parse(\"[\" + result + \"]\");\n\n        console.log('Result JSON: ' + JSON.stringify(result));\n\n        return results;\n    }\n\n    function doQuery(scope) {\n        var sqlString = '';\n\n        var fields = checkAnyFieldFilled(scope);\n\n        console.log('fields: ' + fields);\n\n        if (fields.length > 0) {\n            var and = false;\n            sqlString = \"WHERE \";\n\n            for (i = 0; i < fields.length; i++) { \n                var obj = fields[i];\n                if (and)\n                    sqlString = sqlString.concat(\" AND \");\n\n\n                sqlString = sqlString.concat('UPPER(');\n                sqlString = sqlString.concat(obj.field);\n                sqlString = sqlString.concat(')');\n                if (!obj.exactMatch)\n                    sqlString = sqlString.concat(\" LIKE UPPER('%\");\n                else\n                    sqlString = sqlString.concat(\" = UPPER('\");\n\n                sqlString = sqlString.concat(obj.value);\n\n                if (!obj.exactMatch)\n                    sqlString = sqlString.concat(\"%\");\n\n                sqlString = sqlString.concat(\"')\");\n\n                and = true;\n            }\n        }\n\n        console.log(\"Query: \" + sqlString);\n        return sqlString;\n    }\n\n\n    function submit_search_row_message() {\n        var scope = angular.element($(\"#submit-searchFPSRowMessages-container\")).scope();\n\n        console.log('Submitting search row message');\n        \n        var query = doQuery(scope);\n\n        scope.z.angularBind('queryRawMessages', query, '20171204-093003_1765612771');\n        scope.z.runParagraph('20171204-093003_1765612771');\n    }\n\n    \n</script>\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"scala","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":166,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1541606594758_-1092274131","id":"20181031-143128_1421470609","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1356"},{"title":"Search For Raw Message Phoenix Result","text":"%jdbc(phoenix)\nselect * from FPS_MESSAGES ${queryRawMessages}","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":314,"optionOpen":false}},"1":{"graph":{"mode":"table","height":643.646,"optionOpen":false}}},"enabled":true},"settings":{"params":{"messageId":"'1005105643914625024I3QBJzq'","Message Id":"312888172163104768","queryRawMessages":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"ROWKEY\tdirection\tmessage\ttimestamp\n557279524899094528\tinput\t<?xml version=\"1.0\" encoding=\"UTF-8\"?><Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pacs.008.001.05\"><FIToFICstmrCdtTrf><GrpHdr><MsgId>008-BX18043006846957091020180430826</MsgId><CreDtTm>2018-04-30T15:09:16</CreDtTm><NbOfTxs>1</NbOfTxs><SttlmInf><SttlmMtd>CLRG</SttlmMtd></SttlmInf><InstdAgt><FinInstnId><ClrSysMmbId><ClrSysId><Prtry>ISCD Bank Code</Prtry></ClrSysId><MmbId>000956</MmbId></ClrSysMmbId></FinInstnId></InstdAgt></GrpHdr><CdtTrfTxInf><PmtId><EndToEndId>FPS live proving</EndToEndId><TxId>BX1804300684695709</TxId><ClrSysRef>20180430002</ClrSysRef></PmtId><PmtTpInf><InstrPrty>HIGH</InstrPrty><SvcLvl><Cd>URNS</Cd></SvcLvl><LclInstrm><Prtry>SIP/101010</Prtry></LclInstrm><CtgyPurp><Prtry>INTERNET</Prtry></CtgyPurp></PmtTpInf><IntrBkSttlmAmt Ccy =\"GBP\">9.00</IntrBkSttlmAmt><IntrBkSttlmDt>2018-04-30</IntrBkSttlmDt><ChrgBr>SLEV</ChrgBr><InstgAgt><FinInstnId><ClrSysMmbId><ClrSysId><Cd>GBDSC</Cd></ClrSysId><MmbId>200000</MmbId></ClrSysMmbId></FinInstnId></InstgAgt><IntrmyAgt1><FinInstnId><ClrSysMmbId><ClrSysId><Prtry>ISCD Bank Code</Prtry></ClrSysId><MmbId>000002</MmbId></ClrSysMmbId></FinInstnId></IntrmyAgt1><IntrmyAgt2><FinInstnId><ClrSysMmbId><ClrSysId><Prtry>ISCD Bank Code</Prtry></ClrSysId><MmbId>000956</MmbId></ClrSysMmbId></FinInstnId></IntrmyAgt2><Dbtr><Nm>IPAGOO LLP</Nm></Dbtr><DbtrAcct><Id><Othr><Id>53765687</Id></Othr></Id></DbtrAcct><DbtrAgt><FinInstnId><ClrSysMmbId><ClrSysId><Cd>GBDSC</Cd></ClrSysId><MmbId>200000</MmbId></ClrSysMmbId></FinInstnId></DbtrAgt><CdtrAgt><FinInstnId><ClrSysMmbId><ClrSysId><Cd>GBDSC</Cd></ClrSysId><MmbId>040082</MmbId></ClrSysMmbId></FinInstnId></CdtrAgt><Cdtr><Nm>RUSS FRAY</Nm></Cdtr><CdtrAcct><Id><Othr><Id>00000104</Id></Othr></Id></CdtrAcct><InstrForNxtAgt><InstrInf>/FPID/BX18043006846957091020180430826200000     </InstrInf></InstrForNxtAgt><RmtInf><Strd><CdtrRefInf><Ref>FPS live proving</Ref></CdtrRefInf></Strd></RmtInf></CdtTrfTxInf></FIToFICstmrCdtTrf></Document>\t1525097357078\n557279524899094528_RESP\tinput\t<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><Document xmlns=\"urn:iso:std:iso:20022:tech:xsd:pacs.002.001.06\"><FIToFIPmtStsRpt><GrpHdr><MsgId>561116355549724672</MsgId><CreDtTm>2018-04-30T14:09:55.477</CreDtTm><InstgAgt><FinInstnId><ClrSysMmbId><ClrSysId><Prtry>ISCD Bank Code</Prtry></ClrSysId><MmbId>000956</MmbId></ClrSysMmbId></FinInstnId></InstgAgt></GrpHdr><TxInfAndSts><OrgnlGrpInf><OrgnlMsgId>008-BX18043006846957091020180430826</OrgnlMsgId><OrgnlMsgNmId>pacs.008.001.05</OrgnlMsgNmId></OrgnlGrpInf><OrgnlTxId>BX1804300684695709</OrgnlTxId><TxSts>ACSP</TxSts><StsRsnInf><Rsn><Prtry>0000</Prtry></Rsn></StsRsnInf><OrgnlTxRef><IntrBkSttlmAmt Ccy=\"GBP\">9.00</IntrBkSttlmAmt><IntrBkSttlmDt>2018-04-30</IntrBkSttlmDt><SttlmInf><SttlmMtd>CLRG</SttlmMtd></SttlmInf><PmtTpInf><SvcLvl><Cd>URNS</Cd></SvcLvl><LclInstrm><Prtry>SIP/101010</Prtry></LclInstrm></PmtTpInf><RmtInf><Strd><AddtlRmtInf>/FPID/BX18043006846957091020180430826200000     </AddtlRmtInf></Strd></RmtInf></OrgnlTxRef></TxInfAndSts></FIToFIPmtStsRpt></Document>\t1525097395486\n"}]},"apps":[],"jobName":"paragraph_1541606594758_-1092274131","id":"20171204-093003_1765612771","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1357"},{"title":"Search Protocol Messages","text":"%angular\n<form id=\"searchForUsmForm\" name=\"searchForUsmForm\">\n  <div class= \"form-group\">\n    <div class=\"row\">\n        <!-- USM type -->\n        <div class=\"col-xs-4 form-group\">\n            <label for=\"usm-type\" >USM Type: </label>\n            <select class=\"form-control\" id=\"usm-type\" ng-model=\"data.usmType\">\n                <option selected value></option>\n                <option value=\"3RDPTYSTS\">FPS Institutions and Third Party Benefciary Status Change</option>\n                <option value=\"SNDTHRSTSCHG\">Settlement Risk - Net Sender Threshold Status Change</option>\n                <option value=\"SNDCAPSTS\">Net Sender Cap Status</option>\n                <option value=\"SITLCHG\">Settlement Individual Tranasaction Limit Change</option>\n                <option value=\"STLPAYCD\">STL_PAYMENT_CODE</option>\n                <option value=\"SNDTHR\">Net Sender Threshold Change</option>\n                <option value=\"SNDCAPCHG\">Net Sender Cap Change</option>\n                <option value=\"STLMSTS\">Settlement Status</option>\n                <option value=\"SCHRTNPAYFAIL\">Scheme Return Payment Failure</option>\n                <option value=\"FREEFMT\">Free Format</option>\n                <option value=\"ASPMALT\">ASPM Alert Message</option>\n                <option value=\"PROP\">Proprietary</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"row\">\n        <!-- Start Date -->\n        <div class=\"col-xs-4 form-group\" >\n            <label for=\"usm-startDate\">Start Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"usm-startDate\" id=\"usm-startDate\" ng-model=\"data.startDate\"></input>\n        </div>\n        <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !searchForUsmForm.usmStartTime.$valid && searchForUsmForm.usmStartTime.$touched}\" >\n            <label for=\"usmStartTime\">Start Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"usmStartTime\" id=\"usmStartTime\" ng-model=\"data.startTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <label ng-show=\"!searchForUsmForm.usmStartTime.$valid && searchForUsmForm.usmStartTime.$touched\">Expected hh:mm:ss format</label>\n        </div>\n    </div>\n    <div class=\"row\">\n        <!-- End Date -->\n        <div class=\"col-xs-4 form-group\">\n            <label for=\"usm-endDate\">End Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"usm-endDate\" id=\"usm-endDate\" ng-model=\"data.endDate\"></input>\n        </div>\n        <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !searchForUsmForm.usmEndTime.$valid && searchForUsmForm.usmEndTime.$touched}\" >\n            <label for=\"usmEndTime\">End Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"usmEndTime\" id=\"usmEndTime\" ng-model=\"data.endTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <div ng-show=\"!searchForUsmForm.usmEndTime.$valid && searchForUsmForm.usmEndTime.$touched\">Expected hh:mm:ss format</div>\n        </div>\n    </div>\n\n\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"query()\" ng-disabled=\"searchForUsmForm.$invalid\"> Search USM</button>\n</form>\n\n\n<div class=\"clear-form-button\">\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n</div>\n\n<script>\nfunction init_search_usm(){\n    console.log('init usd');\n    var scope = angular.element($(\"#searchForUsmForm\")).scope();\n    scope.data = {};\n\n    scope.clearForm = function(){\n        scope.data = {};\n    }\n\n    scope.query = function(){\n         var scope = angular.element($(\"#searchForUsmForm\")).scope();\n\n            var query = \"where \";\n            var queryChunks = []\n            if (scope.data.usmType !== \"\" && scope.data.usmType != null) {\n                var usmType = \"usmType = \" + \"\\'\" + scope.data.usmType + \"\\'\";\n                queryChunks.push(usmType)\n            }\n            if (scope.data.startDate != \"\" && scope.data.startDate != null){\n                var startDateElement = document.getElementById('usm-startDate').value;\n                var startdate = \"paymenttimestamp >= \";\n\n                if (scope.data.startTime != \"\" && scope.data.startTime != null){\n                    startdate = startdate + \"\\'\" + startDateElement + \" \" + scope.data.startTime + \".000\" + \"\\'\";\n                }else{\n                    startdate = startdate + \"\\'\" + startDateElement + \"\\'\";\n                }\n                queryChunks.push(startdate)\n            }\n            if (scope.data.endDate != \"\" && scope.data.endDate != null){\n                var endDateElement = document.getElementById('usm-endDate').value;\n                var enddate = \"paymenttimestamp <= \";\n                \n                if (scope.data.endTime != \"\" && scope.data.endTime != null){\n                    enddate = enddate + \"\\'\" + endDateElement + \" \" + scope.data.endTime + \".000\" + \"\\'\";\n                }else{\n                    enddate = enddate + \"\\'\" + endDateElement + \"\\'\";\n                }\n                queryChunks.push(enddate)\n            }\n            if (queryChunks.length === 0){\n                query = \"\";\n            }else{\n                query = query + queryChunks.join(\" and \");\n            }\n            console.log(query);\n            scope.z.angularBind('usmQuery', query,'20171215-063115_262728712');\n            scope.z.runParagraph('20171215-063115_262728712');\n    }\n\n}\n\n</script>\n\n<style>\n#searchForUsmForm{\n    width: 98%;\n    height: 483px;\n}\n</style>","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{"0":{"graph":{"mode":"table","height":266.476,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<form id=\"searchForUsmForm\" name=\"searchForUsmForm\">\n  <div class= \"form-group\">\n    <div class=\"row\">\n        <!-- USM type -->\n        <div class=\"col-xs-4 form-group\">\n            <label for=\"usm-type\" >USM Type: </label>\n            <select class=\"form-control\" id=\"usm-type\" ng-model=\"data.usmType\">\n                <option selected value></option>\n                <option value=\"3RDPTYSTS\">FPS Institutions and Third Party Benefciary Status Change</option>\n                <option value=\"SNDTHRSTSCHG\">Settlement Risk - Net Sender Threshold Status Change</option>\n                <option value=\"SNDCAPSTS\">Net Sender Cap Status</option>\n                <option value=\"SITLCHG\">Settlement Individual Tranasaction Limit Change</option>\n                <option value=\"STLPAYCD\">STL_PAYMENT_CODE</option>\n                <option value=\"SNDTHR\">Net Sender Threshold Change</option>\n                <option value=\"SNDCAPCHG\">Net Sender Cap Change</option>\n                <option value=\"STLMSTS\">Settlement Status</option>\n                <option value=\"SCHRTNPAYFAIL\">Scheme Return Payment Failure</option>\n                <option value=\"FREEFMT\">Free Format</option>\n                <option value=\"ASPMALT\">ASPM Alert Message</option>\n                <option value=\"PROP\">Proprietary</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"row\">\n        <!-- Start Date -->\n        <div class=\"col-xs-4 form-group\" >\n            <label for=\"usm-startDate\">Start Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"usm-startDate\" id=\"usm-startDate\" ng-model=\"data.startDate\"></input>\n        </div>\n        <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !searchForUsmForm.usmStartTime.$valid && searchForUsmForm.usmStartTime.$touched}\" >\n            <label for=\"usmStartTime\">Start Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"usmStartTime\" id=\"usmStartTime\" ng-model=\"data.startTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <label ng-show=\"!searchForUsmForm.usmStartTime.$valid && searchForUsmForm.usmStartTime.$touched\">Expected hh:mm:ss format</label>\n        </div>\n    </div>\n    <div class=\"row\">\n        <!-- End Date -->\n        <div class=\"col-xs-4 form-group\">\n            <label for=\"usm-endDate\">End Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"usm-endDate\" id=\"usm-endDate\" ng-model=\"data.endDate\"></input>\n        </div>\n        <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !searchForUsmForm.usmEndTime.$valid && searchForUsmForm.usmEndTime.$touched}\" >\n            <label for=\"usmEndTime\">End Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"usmEndTime\" id=\"usmEndTime\" ng-model=\"data.endTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <div ng-show=\"!searchForUsmForm.usmEndTime.$valid && searchForUsmForm.usmEndTime.$touched\">Expected hh:mm:ss format</div>\n        </div>\n    </div>\n\n\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"query()\" ng-disabled=\"searchForUsmForm.$invalid\"> Search USM</button>\n</form>\n\n\n<div class=\"clear-form-button\">\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n</div>\n\n<script>\nfunction init_search_usm(){\n    console.log('init usd');\n    var scope = angular.element($(\"#searchForUsmForm\")).scope();\n    scope.data = {};\n\n    scope.clearForm = function(){\n        scope.data = {};\n    }\n\n    scope.query = function(){\n         var scope = angular.element($(\"#searchForUsmForm\")).scope();\n\n            var query = \"where \";\n            var queryChunks = []\n            if (scope.data.usmType !== \"\" && scope.data.usmType != null) {\n                var usmType = \"usmType = \" + \"\\'\" + scope.data.usmType + \"\\'\";\n                queryChunks.push(usmType)\n            }\n            if (scope.data.startDate != \"\" && scope.data.startDate != null){\n                var startDateElement = document.getElementById('usm-startDate').value;\n                var startdate = \"paymenttimestamp >= \";\n\n                if (scope.data.startTime != \"\" && scope.data.startTime != null){\n                    startdate = startdate + \"\\'\" + startDateElement + \" \" + scope.data.startTime + \".000\" + \"\\'\";\n                }else{\n                    startdate = startdate + \"\\'\" + startDateElement + \"\\'\";\n                }\n                queryChunks.push(startdate)\n            }\n            if (scope.data.endDate != \"\" && scope.data.endDate != null){\n                var endDateElement = document.getElementById('usm-endDate').value;\n                var enddate = \"paymenttimestamp <= \";\n                \n                if (scope.data.endTime != \"\" && scope.data.endTime != null){\n                    enddate = enddate + \"\\'\" + endDateElement + \" \" + scope.data.endTime + \".000\" + \"\\'\";\n                }else{\n                    enddate = enddate + \"\\'\" + endDateElement + \"\\'\";\n                }\n                queryChunks.push(enddate)\n            }\n            if (queryChunks.length === 0){\n                query = \"\";\n            }else{\n                query = query + queryChunks.join(\" and \");\n            }\n            console.log(query);\n            scope.z.angularBind('usmQuery', query,'20171215-063115_262728712');\n            scope.z.runParagraph('20171215-063115_262728712');\n    }\n\n}\n\n</script>\n\n<style>\n#searchForUsmForm{\n    width: 98%;\n    height: 483px;\n}\n</style>"}]},"apps":[],"jobName":"paragraph_1541606594760_-1094582625","id":"20171215-063659_306997107","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1358"},{"title":"Search Payment Errors","text":"%angular\r\n<div id=\"searchError\">\r\n<form name=\"searchErrorForm\" id=\"searchErrorForm\">\r\n  <div class= \"form-group\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-3 form-group\">\r\n          <!-- payment id -->\r\n            <label for=\"s-paymentId\" id=\"paymentIdInput\">Payment Id: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"searchErrorPaymentId\" ng-model=\"data.paymentId\"></input>\r\n        </div>\r\n     \r\n        <!-- faster payment id -->\r\n        <div  class=\"col-xs-3 form-group\">\r\n              <label for=\"serachErrorFpid\">FP Id: </label>\r\n              <input type=\"text\" class=\"form-control\" id=\"serachErrorFpid\" name=\"serachErrorFpid\" ng-model=\"data.fpid\"></input>\r\n         </div>\r\n    </div>\r\n\r\n\r\n   <div class=\"row\">\r\n    <!-- direction -->\r\n    <div class=\"col-xs-3 form-group\">\r\n             <label for=\"searchErrorDirection\" id=\"directionLabel\">Direction: </label>\r\n                <select class=\"form-control\" id=\"searchErrorDirection\" name=\"searchErrorDirection\" ng-model=\"data.direction\">\r\n                    <option selected value> -- select an option -- </option>\r\n                    <option value=\"'I'\">Inbound</option>\r\n                    <option value=\"'O'\">Outbound</option>\r\n                </select>\r\n    </div>\r\n    <!-- debit/credit -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"searchErrorCreditDebit\" >Credit / Debit: </label>\r\n            <select class=\"form-control\" id=\"searchErrorCreditDebit\" name=\"searchErrorCreditDebit\" ng-model=\"data.creditDebit\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'D'\">Debit</option>\r\n                <option value=\"'C'\">Credit</option>\r\n            </select>\r\n    </div>  \r\n    <div  class=\"col-xs-3 form-group\">\r\n      <!-- scheme -->   \r\n        <label for=\"searchErrorPaymentscheme\" >Scheme: </label>\r\n            <select class=\"form-control\" id=\"searchErrorPaymentscheme\" name=\"searchErrorPaymentscheme\" ng-model=\"data.paymentScheme\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'pacs.002.001.06'\">pacs_002_001</option>\r\n                <option value=\"'pacs.004.001.06'\">pacs_004_001</option>\r\n                <option value=\"'pacs.007.001.06'\">pacs_007_001</option>\r\n                <option value=\"'pacs.008.001.06'\">pacs_008_001</option>\r\n                <option value=\"'pacs.009.001.06'\">pacs_009_001</option>\r\n            </select>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- amount -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"searchErrorIntrbksttlamt\">Settlement Amount: </label>\r\n        <input type=\"number\" class=\"form-control\" id=\"searchErrorIntrbksttlamt\" name=\"searchErrorIntrbksttlamt\" \r\n            step=\"0.01\" min=\"0\" ng-model=\"data.amount\">\r\n    </div>\r\n    <!-- currency -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"seachErrorIntrbksttlccy\">Currency: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"seachErrorIntrbksttlccy\" name=\"seachErrorIntrbksttlccy\" ng-model=\"data.currency\"></input>\r\n    </div>\r\n  \r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- debtor acc-->\r\n     <div class=\"col-xs-3 form-group\">\r\n         <label for=\"searchErrorDbtracct\">Debtor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"searchErrorDbtracct\" name=\"searchErrorDbtracct\" ng-model=\"data.dbtracct\"></input>\r\n    </div>\r\n    <!-- creditor acc-->\r\n     <div class=\"col-xs-3 form-group\">\r\n         <label for=\"searchErrorCreditorAcc\">Creditor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"searchErrorCreditorAcc\" name=\"searchErrorCreditorAcc\" ng-model=\"data.creditorAcc\"></input>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- payment start date -->\r\n    <div class=\"col-xs-3 form-group\" >\r\n            <label for=\"searchErrorStartDate\">Start Date:</label>\r\n            <input class=\"form-control\"  type=\"date\" name=\"searchErrorStartDate\" id=\"searchErrorStartDate\" ng-model=\"data.startDate\"></input>\r\n        </div>\r\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchErrorForm.searchErrorStartTime.$valid && searchErrorForm.searchErrorStartTime.$touched}\" >\r\n            <label for=\"searchErrorStartTime\">Start Time:</label>\r\n            <input class=\"form-control\"  type=\"text\" name=\"searchErrorStartTime\" id=\"searchErrorStartTime\" ng-model=\"data.startTime\"  \r\n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\r\n            <label ng-show=\"!searchErrorForm.searchErrorStartTime.$valid && searchErrorForm.searchErrorStartTime.$touched\">Expected hh:mm:ss format</label>\r\n    </div>\r\n <!-- payment end date -->\r\n <div class=\"col-xs-3 form-group\" >\r\n            <label for=\"searchErrorEndDate\">End Date:</label>\r\n            <input class=\"form-control\"  type=\"date\" name=\"searchErrorEndDate\" id=\"searchErrorEndDate\" ng-model=\"data.endDate\"></input>\r\n        </div>\r\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchErrorForm.searchErrorEndTime.$valid && searchErrorForm.searchErrorEndTime.$touched}\" >\r\n            <label for=\"searchErrorEndTime\">End Time:</label>\r\n            <input class=\"form-control\"  type=\"text\" name=\"searchErrorEndTime\" id=\"searchErrorEndTime\" ng-model=\"data.endTime\"  \r\n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\r\n            <label ng-show=\"!searchErrorForm.searchErrorEndTime.$valid && searchErrorForm.searchErrorEndTime.$touched\">Expected hh:mm:ss format</label>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <!-- message -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"searchErrorMessageContent\">Message Content: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"searchErrorMessageContent\" name=\"searchErrorMessageContent\" \r\n             ng-model=\"data.content\">\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"search()\"> Search</button>\r\n</form>\r\n\r\n<div class=\"clear-form-button\">\r\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\r\n</div>\r\n\r\n</div>\r\n\r\n<script>\r\n\r\nfunction init_search_errors(){\r\n    var scope = angular.element($(\"#searchError\")).scope();\r\n    scope.queryString = \"\";\r\n    scope.z.angularBind('searchErrorQuery', scope.queryString,'20171215-093113_1835093697');\r\n    scope.data = {};\r\n\r\n    scope.clearForm = function(){\r\n        var scope = angular.element($(\"#searchError\")).scope();\r\n        scope.data = {};\r\n    }\r\n\r\n    scope.search = function(){\r\n\r\n        var scope = angular.element($(\"#searchError\")).scope();\r\n\r\n        var startDateQuery = \"\";\r\n        var endDateQuery = \"\";\r\n        if (scope.data.startDate != \"\" && scope.data.startDate != null) {\r\n            var startDateElement = document.getElementById('searchErrorStartDate').value;\r\n            if (scope.data.startTime != \"\" && scope.data.startTime != null) {\r\n                startDateQuery =  \"\\'\" + startDateElement + \" \" + scope.data.startTime + \".000\" + \"\\'\";\r\n            }else {\r\n                startDateQuery = \"\\'\" + startDateElement + \"\\'\";\r\n            }\r\n        }\r\n        if (scope.data.endDate != \"\" && scope.data.endDate != null) {\r\n            var endDateElement = document.getElementById('searchErrorEndDate').value;\r\n            if (scope.data.endTime != \"\" && scope.data.endTime != null) {\r\n                endDateQuery  =  \"\\'\" + endDateElement + \" \" + scope.data.endTime + \".000\" + \"\\'\";\r\n            }else {\r\n                endDateQuery = \"\\'\" + endDateElement + \"\\'\";\r\n            }\r\n        }\r\n\r\n        var values = [scope.data.paymentId, scope.data.fpid, scope.data.direction, scope.data.creditDebit, scope.data.paymentScheme, scope.data.amount,\r\n                        getStringValue(scope.data.currency), scope.data.dbtracct, scope.data.creditorAcc, getLikeValue(scope.data.content), startDateQuery,  endDateQuery]\r\n\r\n        var queryFields = [\"paymentId = \", \"fpid = \", \"direction = \", \"cdtdbtind = \", \"paymentscheme =\", \"intrbksttlamt = \",\r\n            \"intrbksttlccy = \", \"dbtracct = \", \"cdtracct = \", \"UPPER(paymentmessage) like \", \"paymenttimestamp >= \", \"paymenttimestamp <= \"]\r\n        \r\n        var queryValues = queryFields.map(function(e, i) {\r\n            var field = e;\r\n            var value = values[i]\r\n            if (value === null || typeof(value) == 'undefined' || value === \"\" || value == \"'%%'\"){\r\n                return \"\";\r\n            }\r\n            return e + value;\r\n        });\r\n        var notEmptyQueryValues = queryValues.filter(function check(c) { if (c === \"\") {return false} return true })\r\n        \r\n        var queryString = \"\";\r\n        if (notEmptyQueryValues.length != 0){\r\n            queryString = \"where \" + notEmptyQueryValues.join(\" and \");\r\n        }\r\n        scope.queryString = queryString;\r\n        console.log(scope.queryString);\r\n        scope.z.angularBind('searchErrorQuery', scope.queryString,'20171215-093113_1835093697');\r\n        scope.z.runParagraph('20171215-093113_1835093697');\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#searchError{\r\n    width: 98%;\r\n}\r\n</style","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"searchError\">\r\n<form name=\"searchErrorForm\" id=\"searchErrorForm\">\r\n  <div class= \"form-group\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-3 form-group\">\r\n          <!-- payment id -->\r\n            <label for=\"s-paymentId\" id=\"paymentIdInput\">Payment Id: </label>\r\n            <input type=\"text\" class=\"form-control\" id=\"searchErrorPaymentId\" ng-model=\"data.paymentId\"></input>\r\n        </div>\r\n     \r\n        <!-- faster payment id -->\r\n        <div  class=\"col-xs-3 form-group\">\r\n              <label for=\"serachErrorFpid\">FP Id: </label>\r\n              <input type=\"text\" class=\"form-control\" id=\"serachErrorFpid\" name=\"serachErrorFpid\" ng-model=\"data.fpid\"></input>\r\n         </div>\r\n    </div>\r\n\r\n\r\n   <div class=\"row\">\r\n    <!-- direction -->\r\n    <div class=\"col-xs-3 form-group\">\r\n             <label for=\"searchErrorDirection\" id=\"directionLabel\">Direction: </label>\r\n                <select class=\"form-control\" id=\"searchErrorDirection\" name=\"searchErrorDirection\" ng-model=\"data.direction\">\r\n                    <option selected value> -- select an option -- </option>\r\n                    <option value=\"'I'\">Inbound</option>\r\n                    <option value=\"'O'\">Outbound</option>\r\n                </select>\r\n    </div>\r\n    <!-- debit/credit -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"searchErrorCreditDebit\" >Credit / Debit: </label>\r\n            <select class=\"form-control\" id=\"searchErrorCreditDebit\" name=\"searchErrorCreditDebit\" ng-model=\"data.creditDebit\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'D'\">Debit</option>\r\n                <option value=\"'C'\">Credit</option>\r\n            </select>\r\n    </div>  \r\n    <div  class=\"col-xs-3 form-group\">\r\n      <!-- scheme -->   \r\n        <label for=\"searchErrorPaymentscheme\" >Scheme: </label>\r\n            <select class=\"form-control\" id=\"searchErrorPaymentscheme\" name=\"searchErrorPaymentscheme\" ng-model=\"data.paymentScheme\">\r\n                <option selected value> -- select an option -- </option>\r\n                <option value=\"'pacs.002.001.06'\">pacs_002_001</option>\r\n                <option value=\"'pacs.004.001.06'\">pacs_004_001</option>\r\n                <option value=\"'pacs.007.001.06'\">pacs_007_001</option>\r\n                <option value=\"'pacs.008.001.06'\">pacs_008_001</option>\r\n                <option value=\"'pacs.009.001.06'\">pacs_009_001</option>\r\n            </select>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- amount -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"searchErrorIntrbksttlamt\">Settlement Amount: </label>\r\n        <input type=\"number\" class=\"form-control\" id=\"searchErrorIntrbksttlamt\" name=\"searchErrorIntrbksttlamt\" \r\n            step=\"0.01\" min=\"0\" ng-model=\"data.amount\">\r\n    </div>\r\n    <!-- currency -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"seachErrorIntrbksttlccy\">Currency: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"seachErrorIntrbksttlccy\" name=\"seachErrorIntrbksttlccy\" ng-model=\"data.currency\"></input>\r\n    </div>\r\n  \r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- debtor acc-->\r\n     <div class=\"col-xs-3 form-group\">\r\n         <label for=\"searchErrorDbtracct\">Debtor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"searchErrorDbtracct\" name=\"searchErrorDbtracct\" ng-model=\"data.dbtracct\"></input>\r\n    </div>\r\n    <!-- creditor acc-->\r\n     <div class=\"col-xs-3 form-group\">\r\n         <label for=\"searchErrorCreditorAcc\">Creditor Account: </label>\r\n         <input type=\"text\" class=\"form-control\" id=\"searchErrorCreditorAcc\" name=\"searchErrorCreditorAcc\" ng-model=\"data.creditorAcc\"></input>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <!-- payment start date -->\r\n    <div class=\"col-xs-3 form-group\" >\r\n            <label for=\"searchErrorStartDate\">Start Date:</label>\r\n            <input class=\"form-control\"  type=\"date\" name=\"searchErrorStartDate\" id=\"searchErrorStartDate\" ng-model=\"data.startDate\"></input>\r\n        </div>\r\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchErrorForm.searchErrorStartTime.$valid && searchErrorForm.searchErrorStartTime.$touched}\" >\r\n            <label for=\"searchErrorStartTime\">Start Time:</label>\r\n            <input class=\"form-control\"  type=\"text\" name=\"searchErrorStartTime\" id=\"searchErrorStartTime\" ng-model=\"data.startTime\"  \r\n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\r\n            <label ng-show=\"!searchErrorForm.searchErrorStartTime.$valid && searchErrorForm.searchErrorStartTime.$touched\">Expected hh:mm:ss format</label>\r\n    </div>\r\n <!-- payment end date -->\r\n <div class=\"col-xs-3 form-group\" >\r\n            <label for=\"searchErrorEndDate\">End Date:</label>\r\n            <input class=\"form-control\"  type=\"date\" name=\"searchErrorEndDate\" id=\"searchErrorEndDate\" ng-model=\"data.endDate\"></input>\r\n        </div>\r\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchErrorForm.searchErrorEndTime.$valid && searchErrorForm.searchErrorEndTime.$touched}\" >\r\n            <label for=\"searchErrorEndTime\">End Time:</label>\r\n            <input class=\"form-control\"  type=\"text\" name=\"searchErrorEndTime\" id=\"searchErrorEndTime\" ng-model=\"data.endTime\"  \r\n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\r\n            <label ng-show=\"!searchErrorForm.searchErrorEndTime.$valid && searchErrorForm.searchErrorEndTime.$touched\">Expected hh:mm:ss format</label>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <!-- message -->\r\n    <div  class=\"col-xs-3 form-group\">\r\n        <label for=\"searchErrorMessageContent\">Message Content: </label>\r\n        <input type=\"text\" class=\"form-control\" id=\"searchErrorMessageContent\" name=\"searchErrorMessageContent\" \r\n             ng-model=\"data.content\">\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"search()\"> Search</button>\r\n</form>\r\n\r\n<div class=\"clear-form-button\">\r\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\r\n</div>\r\n\r\n</div>\r\n\r\n<script>\r\n\r\nfunction init_search_errors(){\r\n    var scope = angular.element($(\"#searchError\")).scope();\r\n    scope.queryString = \"\";\r\n    scope.z.angularBind('searchErrorQuery', scope.queryString,'20171215-093113_1835093697');\r\n    scope.data = {};\r\n\r\n    scope.clearForm = function(){\r\n        var scope = angular.element($(\"#searchError\")).scope();\r\n        scope.data = {};\r\n    }\r\n\r\n    scope.search = function(){\r\n\r\n        var scope = angular.element($(\"#searchError\")).scope();\r\n\r\n        var startDateQuery = \"\";\r\n        var endDateQuery = \"\";\r\n        if (scope.data.startDate != \"\" && scope.data.startDate != null) {\r\n            var startDateElement = document.getElementById('searchErrorStartDate').value;\r\n            if (scope.data.startTime != \"\" && scope.data.startTime != null) {\r\n                startDateQuery =  \"\\'\" + startDateElement + \" \" + scope.data.startTime + \".000\" + \"\\'\";\r\n            }else {\r\n                startDateQuery = \"\\'\" + startDateElement + \"\\'\";\r\n            }\r\n        }\r\n        if (scope.data.endDate != \"\" && scope.data.endDate != null) {\r\n            var endDateElement = document.getElementById('searchErrorEndDate').value;\r\n            if (scope.data.endTime != \"\" && scope.data.endTime != null) {\r\n                endDateQuery  =  \"\\'\" + endDateElement + \" \" + scope.data.endTime + \".000\" + \"\\'\";\r\n            }else {\r\n                endDateQuery = \"\\'\" + endDateElement + \"\\'\";\r\n            }\r\n        }\r\n\r\n        var values = [scope.data.paymentId, scope.data.fpid, scope.data.direction, scope.data.creditDebit, scope.data.paymentScheme, scope.data.amount,\r\n                        getStringValue(scope.data.currency), scope.data.dbtracct, scope.data.creditorAcc, getLikeValue(scope.data.content), startDateQuery,  endDateQuery]\r\n\r\n        var queryFields = [\"paymentId = \", \"fpid = \", \"direction = \", \"cdtdbtind = \", \"paymentscheme =\", \"intrbksttlamt = \",\r\n            \"intrbksttlccy = \", \"dbtracct = \", \"cdtracct = \", \"UPPER(paymentmessage) like \", \"paymenttimestamp >= \", \"paymenttimestamp <= \"]\r\n        \r\n        var queryValues = queryFields.map(function(e, i) {\r\n            var field = e;\r\n            var value = values[i]\r\n            if (value === null || typeof(value) == 'undefined' || value === \"\" || value == \"'%%'\"){\r\n                return \"\";\r\n            }\r\n            return e + value;\r\n        });\r\n        var notEmptyQueryValues = queryValues.filter(function check(c) { if (c === \"\") {return false} return true })\r\n        \r\n        var queryString = \"\";\r\n        if (notEmptyQueryValues.length != 0){\r\n            queryString = \"where \" + notEmptyQueryValues.join(\" and \");\r\n        }\r\n        scope.queryString = queryString;\r\n        console.log(scope.queryString);\r\n        scope.z.angularBind('searchErrorQuery', scope.queryString,'20171215-093113_1835093697');\r\n        scope.z.runParagraph('20171215-093113_1835093697');\r\n    }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n#searchError{\r\n    width: 98%;\r\n}\r\n</style"}]},"apps":[],"jobName":"paragraph_1541606594761_-1094967373","id":"20171218-101217_416304216","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1359"},{"title":"","text":"%jdbc(hive)\nselect * from  fasterpayments.fpsusm\n${usmQuery}","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":true,"title":false,"results":{"0":{"graph":{"mode":"table","height":648.056,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{"usmQuery":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"fpsusm.paymentid\tfpsusm.paymenttimestamp\tfpsusm.messageid\tfpsusm.msgdatetime\tfpsusm.usmtype\tfpsusm.usmessage\n229397732588257280\t2018-11-07 07:10:22.306\t273197\t2018-11-07 07:08:38.0\tSTLMSTS\t{\"messageID\":273197.0\n360783840189644800\t2018-11-07 13:09:27.944\t273254\t2018-11-07 13:07:38.0\tSTLMSTS\t{\"messageID\":273254.0\n171012514102149120\t2018-11-08 07:03:08.206\t273335\t2018-11-08 07:02:14.0\tSTLMSTS\t{\"messageID\":273335.0\n220552110003191808\t2018-11-07 07:03:21.897\t273172\t2018-11-07 07:02:27.0\tSTLMSTS\t{\"messageID\":273172.0\n360783840189612032\t2018-11-07 13:03:25.668\t273229\t2018-11-07 13:02:28.0\tSTLMSTS\t{\"messageID\":273229.0\n103296943021883392\t2018-11-07 17:03:31.339\t273280\t2018-11-07 17:02:36.0\tSTLMSTS\t{\"messageID\":273280.0\n360783840189677568\t2018-11-07 17:09:33.001\t273305\t2018-11-07 17:07:39.0\tSTLMSTS\t{\"messageID\":273305.0\n171012514102181888\t2018-11-08 07:09:40.251\t273360\t2018-11-08 07:07:40.0\tSTLMSTS\t{\"messageID\":273360.0\n"}]},"apps":[],"jobName":"paragraph_1541606594762_-1093813127","id":"20171215-063115_262728712","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1360"},{"title":"","text":"%jdbc(hive)\nselect * from fasterpayments.FpsExceptions\n${searchErrorQuery};","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":true,"title":false,"results":{"0":{"graph":{"mode":"table","height":522.083,"optionOpen":false}}},"enabled":true},"settings":{"params":{"searchErrorQuery":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"fpsexceptions.paymentid\tfpsexceptions.paymenttimestamp\tfpsexceptions.paymentscheme\tfpsexceptions.direction\tfpsexceptions.cdtdbtind\tfpsexceptions.fpid\tfpsexceptions.originalfpid\tfpsexceptions.paymenttype\tfpsexceptions.paymenttypecode\tfpsexceptions.poo\tfpsexceptions.intrbksttldt\tfpsexceptions.intrbksttlamt\tfpsexceptions.intrbksttlccy\tfpsexceptions.dbtracct\tfpsexceptions.dbtragt_clrsysmmbid\tfpsexceptions.dbtragt_bicfi\tfpsexceptions.cdtracct\tfpsexceptions.cdtragt_clrsysmmbid\tfpsexceptions.cdtragt_bicfi\tfpsexceptions.cycleid\tfpsexceptions.exceptioncode\tfpsexceptions.exceptionrsn\tfpsexceptions.paymentmessage\n"}]},"apps":[],"jobName":"paragraph_1541606594764_-1096121620","id":"20171215-093113_1835093697","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:37+0000","dateFinished":"2018-11-08T13:03:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1361"},{"text":"%angular\n<div></div>","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/undefined","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div></div>"}]},"apps":[],"jobName":"paragraph_1541606594766_-1095352122","id":"20171219-054437_1643507056","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:36+0000","dateFinished":"2018-11-08T13:03:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1362"},{"title":"Search Sanctions","text":"%angular\n<div id=\"searchSanctions\">\n<form name=\"searchSanctionsForm\" id=\"searchSanctionsForm\">\n  <div class= \"form-group\">\n    <div class=\"row\">\n        <div class=\"col-xs-3 form-group\">\n          <!-- payment id -->\n            <label for=\"searchSanctionsPaymentId\" id=\"paymentIdInput\">Payment Id: </label>\n            <input type=\"text\" class=\"form-control\" id=\"searchSanctionsPaymentId\" ng-model=\"data.paymentId\"></input>\n        </div>\n     \n        <!-- payment system -->\n        <div  class=\"col-xs-3 form-group\">\n              <label for=\"searchSanctionsPaymentSystem\">Payment System: </label>\n                <select class=\"form-control\" id=\"searchSanctionsPaymentSystem\" name=\"searchSanctionsPaymentSystem\" ng-model=\"data.paymentSystem\">\n                <option selected value> -- select an option -- </option>\n                <option value=\"'FPS'\">FPS</option>\n            </select>\n         </div>\n\n        <div class=\"col-xs-3 form-group\">\n          <!-- sanctions request id -->\n            <label for=\"searchForSanctionsREquesy\" id=\"SanctionRequestId\">Sanctions Request Id: </label>\n            <input type=\"text\" class=\"form-control\" id=\"searchForSanctionsREquesy\" ng-model=\"data.sanctionsRequestId\"></input>\n        </div>\n        \n    </div>\n\n\n   <div class=\"row\">\n    <!-- direction -->\n    <div class=\"col-xs-3 form-group\">\n             <label for=\"searchSanctionsDirection\" id=\"directionLabel\">Direction: </label>\n                <select class=\"form-control\" id=\"searchSanctionsDirection\" name=\"searchSanctionsDirection\" ng-model=\"data.direction\">\n                    <option selected value> -- select an option -- </option>\n                    <option value=\"'I'\">Inbound</option>\n                    <option value=\"'O'\">Outbound</option>\n                </select>\n    </div>\n    <!-- debit/credit -->\n    <div  class=\"col-xs-3 form-group\">\n        <label for=\"searchSanctionsCreditDebit\" >Credit / Debit: </label>\n            <select class=\"form-control\" id=\"searchSanctionsCreditDebit\" name=\"searchSanctionsCreditDebit\" ng-model=\"data.creditDebit\">\n                <option selected value> -- select an option -- </option>\n                <option value=\"'D'\">Debit</option>\n                <option value=\"'C'\">Credit</option>\n            </select>\n    </div>  \n    <div  class=\"col-xs-3 form-group\">\n      <!-- scheme -->   \n        <label for=\"searchSanctionsPaymentscheme\" >Scheme: </label>\n            <select class=\"form-control\" id=\"searchSanctionsPaymentscheme\" name=\"searchSanctionsPaymentscheme\" ng-model=\"data.paymentScheme\">\n                <option selected value> -- select an option -- </option>\n                <option value=\"'pacs.002.001.06'\">pacs_002_001</option>\n                <option value=\"'pacs.004.001.06'\">pacs_004_001</option>\n                <option value=\"'pacs.007.001.06'\">pacs_007_001</option>\n                <option value=\"'pacs.008.001.06'\">pacs_008_001</option>\n                <option value=\"'pacs.009.001.06'\">pacs_009_001</option>\n            </select>\n    </div>\n</div>\n\n<div class=\"row\">\n    <!-- amount -->\n    <div  class=\"col-xs-3 form-group\">\n        <label for=\"searchSanctionsIntrbksttlamt\">Settlement Amount: </label>\n        <input type=\"number\" class=\"form-control\" id=\"searchSanctionsIntrbksttlamt\" name=\"searchSanctionsIntrbksttlamt\" \n            step=\"0.01\" min=\"0\" ng-model=\"data.amount\">\n    </div>\n    <!-- currency -->\n    <div  class=\"col-xs-3 form-group\">\n        <label for=\"ssearchSanctionsIntrbksttlccy\">Currency: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsIntrbksttlccy\" name=\"searchSanctionsIntrbksttlccy\" ng-model=\"data.currency\"></input>\n    </div>\n  \n</div>\n\n<div class=\"row\">\n    <!-- counterparty -->\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsCpN\">Counterparty Name: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCpN\" name=\"searchSanctionsCpN\"  ng-model=\"data.cpartyName\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsAgent\">Counterpaty Sort Code: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsAgent\" name=\"searchSanctionsAgent\"  ng-model=\"data.cpartyAgent\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsAcc\">Counterparty Account: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsAcc\" name=\"searchSanctionsAcc\" ng-model=\"data.cpartyAcc\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsAddress\">Counterparty Address: </label>\n        <input type=\"text\" class=\"form-control\" id=\"ssearchSanctionsAddress\" name=\"searchSanctionsAddress\" ng-model=\"data.cpartyAddress\"></input>\n    </div>\n</div>\n\n<div class=\"row\">\n    <!-- customer -->\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsCrName\">Customer Name: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrName\" name=\"searchSanctionsCrName\"  ng-model=\"data.customerName\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsCrAgent\">Customer Sort Code: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrAgent\" name=\"searchSanctionsCrAgent\"  ng-model=\"data.customerAgent\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchSanctionsForm.searchSanctionsCrAcc.$valid && searchSanctionsForm.searchSanctionsCrAcc.$dirty}\" >\n         <label for=\"searchSanctionsCrAcc\">Customer Account: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrAcc\" name=\"searchSanctionsCrAcc\" \n            ng-model=\"data.customerAcc\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\" ng-show=\"false\">\n         <label for=\"searchSanctionsCrAddress\">Customer Address: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrAddress\" name=\"searchSanctionsCrAddress\" ng-model=\"data.customerAddress\"></input>\n    </div>\n</div>\n\n<div class=\"row\">\n    <!-- payment start date -->\n    <div class=\"col-xs-3 form-group\" >\n            <label for=\"searchSanctionsStartDate\">Start Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"searchSanctionsStartDate\" id=\"searchSanctionsStartDate\" ng-model=\"data.startDate\"></input>\n        </div>\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchSanctionsForm.searchSanctionsStartTime.$valid && searchSanctionsForm.searchSanctionsStartTime.$touched}\" >\n            <label for=\"searchSanctionsStartTime\">Start Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"searchSanctionsStartTime\" id=\"searchSanctionsStartTime\" ng-model=\"data.startTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <label ng-show=\"!searchErrorForm.searchSanctionsStartTime.$valid && searchErrorForm.searchSanctionsStartTime.$touched\">Expected hh:mm:ss format</label>\n    </div>\n <!-- payment end date -->\n <div class=\"col-xs-3 form-group\" >\n            <label for=\"searchSanctionsEndDate\">End Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"searchSanctionsEndDate\" id=\"searchSanctionsEndDate\" ng-model=\"data.endDate\"></input>\n        </div>\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchSanctionsForm.searchSanctionsEndTime.$valid && searchSanctionsForm.searchSanctionsEndTime.$touched}\" >\n            <label for=\"searchSanctionsEndTime\">End Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"searchSanctionsEndTime\" id=\"searchSanctionsEndTime\" ng-model=\"data.endTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <label ng-show=\"!searchSanctionsForm.searchSanctionsEndTime.$valid && searchSanctionsForm.searchSanctionsEndTime.$touched\">Expected hh:mm:ss format</label>\n    </div>\n</div>\n\n\n<div class=\"row\">\n    <!-- message -->\n    <div  class=\"col-xs-3 form-group\" ng-show=\"false\">\n        <label for=\"searchSanctionsMessageContent\">Message Content: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsMessageContent\" name=\"searchSanctionsMessageContent\" \n             ng-model=\"data.content\">\n    </div>\n</div>\n\n\n\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"search()\"> Search</button>\n</form>\n\n\n<div class=\"clear-form-button\">\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n</div>\n\n\n</div>\n\n<script>\nfunction init_sanctions(){\n    var scope = angular.element($(\"#searchSanctions\")).scope();\n    scope.queryString = \"\";\n    scope.z.angularBind('sanctionsQuery', scope.queryString,'20171201-055640_1294562238');\n    scope.data = {};\n\n    scope.clearForm = function(){\n         var scope = angular.element($(\"#searchSanctions\")).scope();\n         scope.data = {};\n    }\n\n    scope.search = function(){\n\n        var scope = angular.element($(\"#searchSanctions\")).scope();\n\n        var startDateQuery = \"\";\n        var endDateQuery = \"\";\n        if (scope.data.startDate != \"\" && scope.data.startDate != null) {\n            var startDateElement = document.getElementById('searchSanctionsStartDate').value;\n            if (scope.data.startTime != \"\" && scope.data.startTime != null) {\n                startDateQuery =  \"\\'\" + startDateElement + \" \" + scope.data.startTime + \".000\" + \"\\'\";\n            }else {\n                startDateQuery = \"\\'\" + startDateElement + \"\\'\";\n            }\n        }\n        if (scope.data.endDate != \"\" && scope.data.endDate != null) {\n            var endDateElement = document.getElementById('searchSanctionsEndDate').value;\n            if (scope.data.endTime != \"\" && scope.data.endTime != null) {\n                endDateQuery  =  \"\\'\" + endDateElement + \" \" + scope.data.endTime + \".000\" + \"\\'\";\n            }else {\n                endDateQuery = \"\\'\" + endDateElement + \"\\'\";\n            }\n        }\n        \n        var values = [scope.data.paymentId, scope.data.sanctionsRequestId, scope.data.paymentSystem, scope.data.direction, scope.data.creditDebit, scope.data.paymentScheme, scope.data.amount,\n                        getStringValue(scope.data.currency), startDateQuery,  endDateQuery, getLikeValue(scope.data.cpartyName),\n                        scope.data.cpartyAgent, scope.data.cpartyAcc, getLikeValue(scope.data.cpartyAddress),\n                        getLikeValue(scope.data.customerName), scope.data.customerAgent, scope.data.customerAcc, getLikeValue(scope.data.customerAddress)]\n\n        var queryFields = [\"paymentId = \", \"SanctionsRequestId = \" , \"paymentSystem = \", \"direction = \", \"cdtdbtind = \", \"paymentscheme =\", \"intrbksttlamt = \",\n            \"intrbksttlccy = \", \"intrbksttldt >= \", \"intrbksttldt <= \", \"UPPER(counterpartynm) like \", \"counterpartyagt =\",\n            \"counterpartyacct = \", \"UPPER(counterpartyadr) like \", \"UPPER(customernm) like \", \"customeragt =\", \"customeracct =\", \"UPPER(customeradr) like \"]\n        \n        var queryValues = queryFields.map(function(e, i) {\n            var field = e;\n            var value = values[i]\n            if (value === null || typeof(value) == 'undefined' || value === \"\" || value == \"'%%'\"){\n                return \"\";\n            }\n            return e + value;\n        });\n        var notEmptyQueryValues = queryValues.filter(function check(c) { if (c === \"\") {return false} return true })\n        \n        var queryString = \"\";\n        if (notEmptyQueryValues.length != 0){\n            queryString = \"where \" + notEmptyQueryValues.join(\" and \");\n        }\n        scope.queryString = queryString;\n        console.log(scope.queryString);\n        scope.z.angularBind('sanctionsQuery', scope.queryString,'20171201-055640_1294562238');\n        scope.z.runParagraph('20171201-055640_1294562238');\n        reloadSanctions();\n    }\n}\n</script>\n\n<style>\n\n#searchSanctions {\n    width: 98%;\n}\n\n</style>\n\n","user":"jjimenez","dateUpdated":"2018-11-08T13:07:41+0000","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"searchSanctions\">\n<form name=\"searchSanctionsForm\" id=\"searchSanctionsForm\">\n  <div class= \"form-group\">\n    <div class=\"row\">\n        <div class=\"col-xs-3 form-group\">\n          <!-- payment id -->\n            <label for=\"searchSanctionsPaymentId\" id=\"paymentIdInput\">Payment Id: </label>\n            <input type=\"text\" class=\"form-control\" id=\"searchSanctionsPaymentId\" ng-model=\"data.paymentId\"></input>\n        </div>\n     \n        <!-- payment system -->\n        <div  class=\"col-xs-3 form-group\">\n              <label for=\"searchSanctionsPaymentSystem\">Payment System: </label>\n                <select class=\"form-control\" id=\"searchSanctionsPaymentSystem\" name=\"searchSanctionsPaymentSystem\" ng-model=\"data.paymentSystem\">\n                <option selected value> -- select an option -- </option>\n                <option value=\"'FPS'\">FPS</option>\n            </select>\n         </div>\n\n        <div class=\"col-xs-3 form-group\">\n          <!-- sanctions request id -->\n            <label for=\"searchForSanctionsREquesy\" id=\"SanctionRequestId\">Sanctions Request Id: </label>\n            <input type=\"text\" class=\"form-control\" id=\"searchForSanctionsREquesy\" ng-model=\"data.sanctionsRequestId\"></input>\n        </div>\n        \n    </div>\n\n\n   <div class=\"row\">\n    <!-- direction -->\n    <div class=\"col-xs-3 form-group\">\n             <label for=\"searchSanctionsDirection\" id=\"directionLabel\">Direction: </label>\n                <select class=\"form-control\" id=\"searchSanctionsDirection\" name=\"searchSanctionsDirection\" ng-model=\"data.direction\">\n                    <option selected value> -- select an option -- </option>\n                    <option value=\"'I'\">Inbound</option>\n                    <option value=\"'O'\">Outbound</option>\n                </select>\n    </div>\n    <!-- debit/credit -->\n    <div  class=\"col-xs-3 form-group\">\n        <label for=\"searchSanctionsCreditDebit\" >Credit / Debit: </label>\n            <select class=\"form-control\" id=\"searchSanctionsCreditDebit\" name=\"searchSanctionsCreditDebit\" ng-model=\"data.creditDebit\">\n                <option selected value> -- select an option -- </option>\n                <option value=\"'D'\">Debit</option>\n                <option value=\"'C'\">Credit</option>\n            </select>\n    </div>  \n    <div  class=\"col-xs-3 form-group\">\n      <!-- scheme -->   \n        <label for=\"searchSanctionsPaymentscheme\" >Scheme: </label>\n            <select class=\"form-control\" id=\"searchSanctionsPaymentscheme\" name=\"searchSanctionsPaymentscheme\" ng-model=\"data.paymentScheme\">\n                <option selected value> -- select an option -- </option>\n                <option value=\"'pacs.002.001.06'\">pacs_002_001</option>\n                <option value=\"'pacs.004.001.06'\">pacs_004_001</option>\n                <option value=\"'pacs.007.001.06'\">pacs_007_001</option>\n                <option value=\"'pacs.008.001.06'\">pacs_008_001</option>\n                <option value=\"'pacs.009.001.06'\">pacs_009_001</option>\n            </select>\n    </div>\n</div>\n\n<div class=\"row\">\n    <!-- amount -->\n    <div  class=\"col-xs-3 form-group\">\n        <label for=\"searchSanctionsIntrbksttlamt\">Settlement Amount: </label>\n        <input type=\"number\" class=\"form-control\" id=\"searchSanctionsIntrbksttlamt\" name=\"searchSanctionsIntrbksttlamt\" \n            step=\"0.01\" min=\"0\" ng-model=\"data.amount\">\n    </div>\n    <!-- currency -->\n    <div  class=\"col-xs-3 form-group\">\n        <label for=\"ssearchSanctionsIntrbksttlccy\">Currency: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsIntrbksttlccy\" name=\"searchSanctionsIntrbksttlccy\" ng-model=\"data.currency\"></input>\n    </div>\n  \n</div>\n\n<div class=\"row\">\n    <!-- counterparty -->\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsCpN\">Counterparty Name: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCpN\" name=\"searchSanctionsCpN\"  ng-model=\"data.cpartyName\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsAgent\">Counterpaty Sort Code: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsAgent\" name=\"searchSanctionsAgent\"  ng-model=\"data.cpartyAgent\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsAcc\">Counterparty Account: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsAcc\" name=\"searchSanctionsAcc\" ng-model=\"data.cpartyAcc\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsAddress\">Counterparty Address: </label>\n        <input type=\"text\" class=\"form-control\" id=\"ssearchSanctionsAddress\" name=\"searchSanctionsAddress\" ng-model=\"data.cpartyAddress\"></input>\n    </div>\n</div>\n\n<div class=\"row\">\n    <!-- customer -->\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsCrName\">Customer Name: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrName\" name=\"searchSanctionsCrName\"  ng-model=\"data.customerName\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\">\n         <label for=\"searchSanctionsCrAgent\">Customer Sort Code: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrAgent\" name=\"searchSanctionsCrAgent\"  ng-model=\"data.customerAgent\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchSanctionsForm.searchSanctionsCrAcc.$valid && searchSanctionsForm.searchSanctionsCrAcc.$dirty}\" >\n         <label for=\"searchSanctionsCrAcc\">Customer Account: </label>\n         <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrAcc\" name=\"searchSanctionsCrAcc\" \n            ng-model=\"data.customerAcc\"></input>\n    </div>\n    <div class=\"col-xs-3 form-group\" ng-show=\"false\">\n         <label for=\"searchSanctionsCrAddress\">Customer Address: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsCrAddress\" name=\"searchSanctionsCrAddress\" ng-model=\"data.customerAddress\"></input>\n    </div>\n</div>\n\n<div class=\"row\">\n    <!-- payment start date -->\n    <div class=\"col-xs-3 form-group\" >\n            <label for=\"searchSanctionsStartDate\">Start Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"searchSanctionsStartDate\" id=\"searchSanctionsStartDate\" ng-model=\"data.startDate\"></input>\n        </div>\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchSanctionsForm.searchSanctionsStartTime.$valid && searchSanctionsForm.searchSanctionsStartTime.$touched}\" >\n            <label for=\"searchSanctionsStartTime\">Start Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"searchSanctionsStartTime\" id=\"searchSanctionsStartTime\" ng-model=\"data.startTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <label ng-show=\"!searchErrorForm.searchSanctionsStartTime.$valid && searchErrorForm.searchSanctionsStartTime.$touched\">Expected hh:mm:ss format</label>\n    </div>\n <!-- payment end date -->\n <div class=\"col-xs-3 form-group\" >\n            <label for=\"searchSanctionsEndDate\">End Date:</label>\n            <input class=\"form-control\"  type=\"date\" name=\"searchSanctionsEndDate\" id=\"searchSanctionsEndDate\" ng-model=\"data.endDate\"></input>\n        </div>\n    <div class=\"col-xs-3 form-group\" ng-class=\"{'has-error': !searchSanctionsForm.searchSanctionsEndTime.$valid && searchSanctionsForm.searchSanctionsEndTime.$touched}\" >\n            <label for=\"searchSanctionsEndTime\">End Time:</label>\n            <input class=\"form-control\"  type=\"text\" name=\"searchSanctionsEndTime\" id=\"searchSanctionsEndTime\" ng-model=\"data.endTime\"  \n                placeholder=\"hh:mm:ss\" ng-pattern=\"/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/\"></input>\n            <label ng-show=\"!searchSanctionsForm.searchSanctionsEndTime.$valid && searchSanctionsForm.searchSanctionsEndTime.$touched\">Expected hh:mm:ss format</label>\n    </div>\n</div>\n\n\n<div class=\"row\">\n    <!-- message -->\n    <div  class=\"col-xs-3 form-group\" ng-show=\"false\">\n        <label for=\"searchSanctionsMessageContent\">Message Content: </label>\n        <input type=\"text\" class=\"form-control\" id=\"searchSanctionsMessageContent\" name=\"searchSanctionsMessageContent\" \n             ng-model=\"data.content\">\n    </div>\n</div>\n\n\n\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"search()\"> Search</button>\n</form>\n\n\n<div class=\"clear-form-button\">\n    <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n</div>\n\n\n</div>\n\n<script>\nfunction init_sanctions(){\n    var scope = angular.element($(\"#searchSanctions\")).scope();\n    scope.queryString = \"\";\n    scope.z.angularBind('sanctionsQuery', scope.queryString,'20171201-055640_1294562238');\n    scope.data = {};\n\n    scope.clearForm = function(){\n         var scope = angular.element($(\"#searchSanctions\")).scope();\n         scope.data = {};\n    }\n\n    scope.search = function(){\n\n        var scope = angular.element($(\"#searchSanctions\")).scope();\n\n        var startDateQuery = \"\";\n        var endDateQuery = \"\";\n        if (scope.data.startDate != \"\" && scope.data.startDate != null) {\n            var startDateElement = document.getElementById('searchSanctionsStartDate').value;\n            if (scope.data.startTime != \"\" && scope.data.startTime != null) {\n                startDateQuery =  \"\\'\" + startDateElement + \" \" + scope.data.startTime + \".000\" + \"\\'\";\n            }else {\n                startDateQuery = \"\\'\" + startDateElement + \"\\'\";\n            }\n        }\n        if (scope.data.endDate != \"\" && scope.data.endDate != null) {\n            var endDateElement = document.getElementById('searchSanctionsEndDate').value;\n            if (scope.data.endTime != \"\" && scope.data.endTime != null) {\n                endDateQuery  =  \"\\'\" + endDateElement + \" \" + scope.data.endTime + \".000\" + \"\\'\";\n            }else {\n                endDateQuery = \"\\'\" + endDateElement + \"\\'\";\n            }\n        }\n        \n        var values = [scope.data.paymentId, scope.data.sanctionsRequestId, scope.data.paymentSystem, scope.data.direction, scope.data.creditDebit, scope.data.paymentScheme, scope.data.amount,\n                        getStringValue(scope.data.currency), startDateQuery,  endDateQuery, getLikeValue(scope.data.cpartyName),\n                        scope.data.cpartyAgent, scope.data.cpartyAcc, getLikeValue(scope.data.cpartyAddress),\n                        getLikeValue(scope.data.customerName), scope.data.customerAgent, scope.data.customerAcc, getLikeValue(scope.data.customerAddress)]\n\n        var queryFields = [\"paymentId = \", \"SanctionsRequestId = \" , \"paymentSystem = \", \"direction = \", \"cdtdbtind = \", \"paymentscheme =\", \"intrbksttlamt = \",\n            \"intrbksttlccy = \", \"intrbksttldt >= \", \"intrbksttldt <= \", \"UPPER(counterpartynm) like \", \"counterpartyagt =\",\n            \"counterpartyacct = \", \"UPPER(counterpartyadr) like \", \"UPPER(customernm) like \", \"customeragt =\", \"customeracct =\", \"UPPER(customeradr) like \"]\n        \n        var queryValues = queryFields.map(function(e, i) {\n            var field = e;\n            var value = values[i]\n            if (value === null || typeof(value) == 'undefined' || value === \"\" || value == \"'%%'\"){\n                return \"\";\n            }\n            return e + value;\n        });\n        var notEmptyQueryValues = queryValues.filter(function check(c) { if (c === \"\") {return false} return true })\n        \n        var queryString = \"\";\n        if (notEmptyQueryValues.length != 0){\n            queryString = \"where \" + notEmptyQueryValues.join(\" and \");\n        }\n        scope.queryString = queryString;\n        console.log(scope.queryString);\n        scope.z.angularBind('sanctionsQuery', scope.queryString,'20171201-055640_1294562238');\n        scope.z.runParagraph('20171201-055640_1294562238');\n        reloadSanctions();\n    }\n}\n</script>\n\n<style>\n\n#searchSanctions {\n    width: 98%;\n}\n\n</style>"}]},"apps":[],"jobName":"paragraph_1541606594766_-1095352122","id":"20171219-054414_1980197911","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:07:41+0000","dateFinished":"2018-11-08T13:07:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1363"},{"text":"%angular\n<div id=\"sanctions-container\">\n\n    <div ng-show=\"result.show\" id=\"sanctions-result\" ng-class=\"{'fp-submit-status-container-failed': !result.success, 'fp-submit-status-container': result.success}\">\n          <div class=\"result-header\">{{result.text}}</div>\n            <div class=\"result-details row\" ng-show=\"result.show\">\n                <div class=\"col-xs-3\">\n                    <label>PaymentId: </label>\n                    <div>{{result.paymentId}}</div>\n                </div>\n                <div class=\"col-xs-3\">\n                    <label>Status: </label>\n                    <div>{{result.txSts}}</div>\n                </div>\n                <div class=\"col-xs-3\"> \n                    <label>Status Reason: </label>\n                    <div>{{result.stsRsn}}</div>\n                </div>\n                <div class=\"col-xs-3\"> \n                    <label>Sanction Action: </label>\n                    <div>{{result.sanctionAction}}</div>\n                </div>\n            </div>\n    </div>\n\n    <!--\n    <div id=\"sanctions-summary\">\n        Selected Sanctions\n        <ul class=\"list-group\">\n            <li ng-repeat=\"item in selectedItems\" class=\"list-group-item\">{{item}}</li>\n        </ul>\n    </div>\n\n    <button ng-disabled=\"submit.inprogress\" class=\"btn btn-success\" data-toggle=\"popover\" data-trigger=\"focus\" data-placement=\"top\" id=\"pass-all-sanctions\">{{submit.passText}}</button>\n    <button ng-disabled=\"submit.inprogress\" class=\"btn btn-danger\" data-toggle=\"popover\" data-trigger=\"focus\" data-placement=\"top\" id=\"fail-all-sanctions\">{{submit.failText}}</button>\n    -->\n</div>\n\n\n\n\n\n<script>\nvar selectedItems = [];\nvar selectedElements = []; //html elements that should be selected\nvar tableHandler;\n\nfunction init_sanctions_api() {\n\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    scope.result = {};\n    scope.submit = {\n        inprogress: false,\n        passText: \"Pass All Selected\",\n        failText: \"Fail All Selected\"\n    }\n    console.log('sanctions api initialized');\n\n    //todo: go through ui and see what is checked?\n     $('#pass-all-sanctions').popover(\n        {   \n            html:true,\n            title: \"<div><div class='btn' onClick='confirmPass()'>Confirm Pass All</div></div>\",\n            placement: \"top\"\n        });   \n    \n    $('#fail-all-sanctions').popover(\n        {   \n            html:true,\n            title: \"<div><div class='btn' onClick='confirmFail()'>Confirm Fail All</div></div>\",\n            placement: \"top\"\n        });   \n\n    //when grid ready - subscribe to scroll event\n    $('#p20171201-055640_1294562238_0_table div.wtHolder').ready(function(){\n        console.log('grid ready');\n        $('#p20171201-055640_1294562238_0_table div.wtHolder').scroll(function(){\n            let inputs = $('#p20171201-055640_1294562238_0_table div.wtHolder')\n                .find(\"input\")\n                .each(function(index) {\n                    let checkbox = this;\n                    selectedElements.find(function(element){\n                        if (element.id == checkbox.id){\n                            checkbox.checked = true;\n                        }\n                    });\n                });\n        });\n    });\n}\n\n\nfunction failSanctions(paymentId){\n    console.log('sanction failed ' + paymentId);\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    var data =  JSON.stringify(\n            {\n                'paymentSystem': \"FPS\",\n                'paymentId':  \"\" + paymentId,\n                'sanctionAction': \"FAIL\"\n            });\n    callSanctionsApi(scope, data, \"sendSanction\");\n    reloadSanctions();\n}\n\nfunction passSanctions(paymentId){\n    console.log('sanction passed ' + paymentId)\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    var data =  JSON.stringify(\n            {\n                'paymentSystem': \"FPS\",\n                'paymentId':  \"\" + paymentId,\n                'sanctionAction': \"PASS\"\n            });\n    callSanctionsApi(scope, data, \"sendSanction\");\n    reloadSanctions();\n}\n\nfunction reloadSanctions(){\n    selectedItems = [];\n    selectedElements = [];\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    scope.selectedItems = [];\n    scope.z.runParagraph('20171201-055640_1294562238');\n}\n\nfunction confirmPass(){\n    //todo: summary with you sure button\n    console.log('confirm pass all selected sanctions');\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    scope.submit.inprogress = true;\n    scope.submit.text = \"Submitting...\"\n    scope.results = [];\n    //console.log(scope);\n    selectedItems.forEach(function(selectedItem) {\n       console.log('passing ' + selectedItem)\n      \n       var data =  JSON.stringify(\n            {\n                'paymentSystem': \"FPS\",\n                'paymentId':  \"\" + selectedItem,\n                'sanctionAction': \"PASS\"\n            });\n       callSanctionsApi(scope, data, 'sendSanction')\n    }, this);\n    reloadSanctions();\n}\n\nfunction confirmFail(){\n    //todo: summary with you sure button\n   console.log('confirm fail all selected sanctions');\n   selectedItems.forEach(function(selectedItem) {\n       console.log('failing ' + selectedItem)\n    }, this);\n    reloadSanctions();\n}\n\nvar itemSelected = (function(paymentId, element){\n   \n    return function(paymentId, element){\n\n        if (element.checked){\n            selectedItems.push(paymentId);\n            selectedElements.push(element);\n        }else{\n            var index = selectedItems.indexOf(paymentId);\n            if (index > -1) {\n                selectedItems.splice(index, 1);\n                selectedElements.splice(index, 1);\n            }\n        }\n        \n        var scope = angular.element($(\"#sanctions-container\")).scope();\n        scope.selectedItems = selectedItems;\n        scope.$apply(); \n\n        $('#p20171201-055640_1294562238_0_table div.wtHolder').unbind('scroll');\n        $('#p20171201-055640_1294562238_0_table div.wtHolder').scroll(function(){\n            //console.log('scrolling');\n            let inputs = $('#p20171201-055640_1294562238_0_table div.wtHolder')\n                .find(\"input\")\n                .each(function(index) {\n                    let checkbox = this;\n                    selectedElements.find(function(element){\n                        if (element.id == checkbox.id){\n                            checkbox.checked = true;\n                        }\n                    });\n                });\n        });\n    }\n})();\n\nfunction callSanctionsApi(scope, data, url){\n    //scope.result.show = false;\n    scope.submit.inprogress = true;\n    scope.submit.text = \"Submitting...\"\n\n    var xhr = new XMLHttpRequest();\n    var url = \"http://ec2-52-212-192-94.eu-west-1.compute.amazonaws.com:8080/bifrost/fps/\" + url;\n    xhr.timeout = 4000; //4 seconds\n    xhr.open(\"POST\", url, true);\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\n    xhr.onreadystatechange = function () {\n\n    if (xhr.readyState === 4)\n    {\n        console.log(xhr.responseText);\n        if (xhr.status === 200){\n        var json = JSON.parse(xhr.responseText);\n        console.log(json);\n            if (json.txSts != \"RJCT\"){\n                scope.result.text = \"Call Success\";\n            }else {\n                scope.result.text = \"Call Failed\"\n            }\n            scope.result.paymentId = json.paymentId;\n            scope.result.paymentSystem = json.paymentSystem;\n            scope.result.sanctionAction = json.sanctionAction;\n            scope.result.txnSts = json.txSts;\n            scope.result.stsRsn = json.stsRsn;\n            scope.result.success = json.txSts != \"RJCT\"\n            scope.result.show = true;\n            scope.$apply(); \n        }else{\n            scope.result.text = \"Call Failed\"\n            scope.result.paymentId = \"\"\n            scope.result.paymentSystem = \"\";\n            scope.result.sanctionAction = \"\";\n            scope.result.txSts = \"\";\n            scope.result.stsRsn = xhr.responseText;\n            scope.result.success = false;\n            scope.result.show = true;\n            scope.$apply(); \n            }\n        }\n        console.log(scope.result);\n        scope.submit.inprogress = false;\n        scope.submit.text = \"Submit Payment\"\n        };\n    console.log('calling sanctions');\n    console.log(data);\n    xhr.send(data);\n}\n</script>\n\n<style>\n#sanctions-summary{\n    margin-top: 20px;\n}\n\n</style>\n\n","user":"jjimenez","dateUpdated":"2018-11-08T13:03:36+0000","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":true},"colWidth":6,"editorMode":"ace/mode/undefined","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"sanctions-container\">\n\n    <div ng-show=\"result.show\" id=\"sanctions-result\" ng-class=\"{'fp-submit-status-container-failed': !result.success, 'fp-submit-status-container': result.success}\">\n          <div class=\"result-header\">{{result.text}}</div>\n            <div class=\"result-details row\" ng-show=\"result.show\">\n                <div class=\"col-xs-3\">\n                    <label>PaymentId: </label>\n                    <div>{{result.paymentId}}</div>\n                </div>\n                <div class=\"col-xs-3\">\n                    <label>Status: </label>\n                    <div>{{result.txSts}}</div>\n                </div>\n                <div class=\"col-xs-3\"> \n                    <label>Status Reason: </label>\n                    <div>{{result.stsRsn}}</div>\n                </div>\n                <div class=\"col-xs-3\"> \n                    <label>Sanction Action: </label>\n                    <div>{{result.sanctionAction}}</div>\n                </div>\n            </div>\n    </div>\n\n    <!--\n    <div id=\"sanctions-summary\">\n        Selected Sanctions\n        <ul class=\"list-group\">\n            <li ng-repeat=\"item in selectedItems\" class=\"list-group-item\">{{item}}</li>\n        </ul>\n    </div>\n\n    <button ng-disabled=\"submit.inprogress\" class=\"btn btn-success\" data-toggle=\"popover\" data-trigger=\"focus\" data-placement=\"top\" id=\"pass-all-sanctions\">{{submit.passText}}</button>\n    <button ng-disabled=\"submit.inprogress\" class=\"btn btn-danger\" data-toggle=\"popover\" data-trigger=\"focus\" data-placement=\"top\" id=\"fail-all-sanctions\">{{submit.failText}}</button>\n    -->\n</div>\n\n\n\n\n\n<script>\nvar selectedItems = [];\nvar selectedElements = []; //html elements that should be selected\nvar tableHandler;\n\nfunction init_sanctions_api() {\n\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    scope.result = {};\n    scope.submit = {\n        inprogress: false,\n        passText: \"Pass All Selected\",\n        failText: \"Fail All Selected\"\n    }\n    console.log('sanctions api initialized');\n\n    //todo: go through ui and see what is checked?\n     $('#pass-all-sanctions').popover(\n        {   \n            html:true,\n            title: \"<div><div class='btn' onClick='confirmPass()'>Confirm Pass All</div></div>\",\n            placement: \"top\"\n        });   \n    \n    $('#fail-all-sanctions').popover(\n        {   \n            html:true,\n            title: \"<div><div class='btn' onClick='confirmFail()'>Confirm Fail All</div></div>\",\n            placement: \"top\"\n        });   \n\n    //when grid ready - subscribe to scroll event\n    $('#p20171201-055640_1294562238_0_table div.wtHolder').ready(function(){\n        console.log('grid ready');\n        $('#p20171201-055640_1294562238_0_table div.wtHolder').scroll(function(){\n            let inputs = $('#p20171201-055640_1294562238_0_table div.wtHolder')\n                .find(\"input\")\n                .each(function(index) {\n                    let checkbox = this;\n                    selectedElements.find(function(element){\n                        if (element.id == checkbox.id){\n                            checkbox.checked = true;\n                        }\n                    });\n                });\n        });\n    });\n}\n\n\nfunction failSanctions(paymentId){\n    console.log('sanction failed ' + paymentId);\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    var data =  JSON.stringify(\n            {\n                'paymentSystem': \"FPS\",\n                'paymentId':  \"\" + paymentId,\n                'sanctionAction': \"FAIL\"\n            });\n    callSanctionsApi(scope, data, \"sendSanction\");\n    reloadSanctions();\n}\n\nfunction passSanctions(paymentId){\n    console.log('sanction passed ' + paymentId)\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    var data =  JSON.stringify(\n            {\n                'paymentSystem': \"FPS\",\n                'paymentId':  \"\" + paymentId,\n                'sanctionAction': \"PASS\"\n            });\n    callSanctionsApi(scope, data, \"sendSanction\");\n    reloadSanctions();\n}\n\nfunction reloadSanctions(){\n    selectedItems = [];\n    selectedElements = [];\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    scope.selectedItems = [];\n    scope.z.runParagraph('20171201-055640_1294562238');\n}\n\nfunction confirmPass(){\n    //todo: summary with you sure button\n    console.log('confirm pass all selected sanctions');\n    var scope = angular.element($(\"#sanctions-container\")).scope();\n    scope.submit.inprogress = true;\n    scope.submit.text = \"Submitting...\"\n    scope.results = [];\n    //console.log(scope);\n    selectedItems.forEach(function(selectedItem) {\n       console.log('passing ' + selectedItem)\n      \n       var data =  JSON.stringify(\n            {\n                'paymentSystem': \"FPS\",\n                'paymentId':  \"\" + selectedItem,\n                'sanctionAction': \"PASS\"\n            });\n       callSanctionsApi(scope, data, 'sendSanction')\n    }, this);\n    reloadSanctions();\n}\n\nfunction confirmFail(){\n    //todo: summary with you sure button\n   console.log('confirm fail all selected sanctions');\n   selectedItems.forEach(function(selectedItem) {\n       console.log('failing ' + selectedItem)\n    }, this);\n    reloadSanctions();\n}\n\nvar itemSelected = (function(paymentId, element){\n   \n    return function(paymentId, element){\n\n        if (element.checked){\n            selectedItems.push(paymentId);\n            selectedElements.push(element);\n        }else{\n            var index = selectedItems.indexOf(paymentId);\n            if (index > -1) {\n                selectedItems.splice(index, 1);\n                selectedElements.splice(index, 1);\n            }\n        }\n        \n        var scope = angular.element($(\"#sanctions-container\")).scope();\n        scope.selectedItems = selectedItems;\n        scope.$apply(); \n\n        $('#p20171201-055640_1294562238_0_table div.wtHolder').unbind('scroll');\n        $('#p20171201-055640_1294562238_0_table div.wtHolder').scroll(function(){\n            //console.log('scrolling');\n            let inputs = $('#p20171201-055640_1294562238_0_table div.wtHolder')\n                .find(\"input\")\n                .each(function(index) {\n                    let checkbox = this;\n                    selectedElements.find(function(element){\n                        if (element.id == checkbox.id){\n                            checkbox.checked = true;\n                        }\n                    });\n                });\n        });\n    }\n})();\n\nfunction callSanctionsApi(scope, data, url){\n    //scope.result.show = false;\n    scope.submit.inprogress = true;\n    scope.submit.text = \"Submitting...\"\n\n    var xhr = new XMLHttpRequest();\n    var url = \"http://ec2-52-212-192-94.eu-west-1.compute.amazonaws.com:8080/bifrost/fps/\" + url;\n    xhr.timeout = 4000; //4 seconds\n    xhr.open(\"POST\", url, true);\n    xhr.setRequestHeader(\"Content-type\", \"application/json\");\n    xhr.onreadystatechange = function () {\n\n    if (xhr.readyState === 4)\n    {\n        console.log(xhr.responseText);\n        if (xhr.status === 200){\n        var json = JSON.parse(xhr.responseText);\n        console.log(json);\n            if (json.txSts != \"RJCT\"){\n                scope.result.text = \"Call Success\";\n            }else {\n                scope.result.text = \"Call Failed\"\n            }\n            scope.result.paymentId = json.paymentId;\n            scope.result.paymentSystem = json.paymentSystem;\n            scope.result.sanctionAction = json.sanctionAction;\n            scope.result.txnSts = json.txSts;\n            scope.result.stsRsn = json.stsRsn;\n            scope.result.success = json.txSts != \"RJCT\"\n            scope.result.show = true;\n            scope.$apply(); \n        }else{\n            scope.result.text = \"Call Failed\"\n            scope.result.paymentId = \"\"\n            scope.result.paymentSystem = \"\";\n            scope.result.sanctionAction = \"\";\n            scope.result.txSts = \"\";\n            scope.result.stsRsn = xhr.responseText;\n            scope.result.success = false;\n            scope.result.show = true;\n            scope.$apply(); \n            }\n        }\n        console.log(scope.result);\n        scope.submit.inprogress = false;\n        scope.submit.text = \"Submit Payment\"\n        };\n    console.log('calling sanctions');\n    console.log(data);\n    xhr.send(data);\n}\n</script>\n\n<style>\n#sanctions-summary{\n    margin-top: 20px;\n}\n\n</style>"}]},"apps":[],"jobName":"paragraph_1541606594767_-1095736871","id":"20180102-070014_677744781","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:03:37+0000","dateFinished":"2018-11-08T13:03:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:1364"},{"text":"%jdbc(hive)\nselect \nconcat('%html <input id=select-',paymentId,' class=\"checkbox-sanctions\" type=\"checkbox\" onClick=\"itemSelected(', paymentId, ',this)\">') as selectitem,\npaymentId, \nsanctionsRequestId,\npaymentsystem,\npaymenttimestamp,\npaymentscheme,\ndirection,\ncdtdbtind,\nintrbksttldt,\nintrbksttlamt,\nintrbksttlccy,\ncounterpartyacct,\ncounterpartyagt,\ncounterpartynm,\ncounterpartyadr,\ncustomernm,\ncustomeracct,\ncustomeragt,\ncustomeracctid,\nsanctionsts,\nsanctionsmatch,\nsanctionsmatchlist,\npaymentmessage,\nconcat('%html <div style=\"width:200px\"> <button class=\"btn btn-success\" onclick=\"passSanctions(',paymentId, ')\">Pass</button> <button class=\"btn btn-danger\" class=\"failSanctions\" onclick=\"failSanctions(',paymentId,')\">Fail</button </div>') as actions  \nfrom sanctions.FpsSanctions\n${sanctionsQuery}","user":"jjimenez","dateUpdated":"2018-11-08T13:07:21+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":6,"editorMode":"ace/mode/sql","editorHide":true,"results":{},"enabled":true},"settings":{"params":{"sanctionsQuery":""},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"org.apache.hive.service.cli.HiveSQLException: Error while compiling statement: FAILED: SemanticException [Error 10004]: Line 27:18 Invalid table alias or column reference 'SIJP17554401303': (possible column names are: paymentid, sanctionsrequestid, paymentsystem, paymenttimestamp, paymentscheme, direction, cdtdbtind, intrbksttldt, intrbksttlamt, intrbksttlccy, counterpartyacct, counterpartyagt, counterpartynm, counterpartyadr, customernm, customeracct, customeragt, customeracctid, sanctionsts, sanctionsmatch, sanctionsmatchlist, paymentmessage, tags)\n\tat org.apache.hive.jdbc.Utils.verifySuccess(Utils.java:277)\n\tat org.apache.hive.jdbc.Utils.verifySuccessWithInfo(Utils.java:263)\n\tat org.apache.hive.jdbc.HiveStatement.runAsyncOnServer(HiveStatement.java:303)\n\tat org.apache.hive.jdbc.HiveStatement.execute(HiveStatement.java:244)\n\tat org.apache.commons.dbcp2.DelegatingStatement.execute(DelegatingStatement.java:291)\n\tat org.apache.commons.dbcp2.DelegatingStatement.execute(DelegatingStatement.java:291)\n\tat org.apache.zeppelin.jdbc.JDBCInterpreter.executeSql(JDBCInterpreter.java:682)\n\tat org.apache.zeppelin.jdbc.JDBCInterpreter.interpret(JDBCInterpreter.java:763)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:101)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:502)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:175)\n\tat org.apache.zeppelin.scheduler.ParallelScheduler$JobRunner.run(ParallelScheduler.java:162)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: org.apache.hive.service.cli.HiveSQLException: Error while compiling statement: FAILED: SemanticException [Error 10004]: Line 27:18 Invalid table alias or column reference 'SIJP17554401303': (possible column names are: paymentid, sanctionsrequestid, paymentsystem, paymenttimestamp, paymentscheme, direction, cdtdbtind, intrbksttldt, intrbksttlamt, intrbksttlccy, counterpartyacct, counterpartyagt, counterpartynm, counterpartyadr, customernm, customeracct, customeragt, customeracctid, sanctionsts, sanctionsmatch, sanctionsmatchlist, paymentmessage, tags)\n\tat org.apache.hive.service.cli.operation.Operation.toSQLException(Operation.java:324)\n\tat org.apache.hive.service.cli.operation.SQLOperation.prepare(SQLOperation.java:148)\n\tat org.apache.hive.service.cli.operation.SQLOperation.runInternal(SQLOperation.java:228)\n\tat org.apache.hive.service.cli.operation.Operation.run(Operation.java:264)\n\tat org.apache.hive.service.cli.session.HiveSessionImpl.executeStatementInternal(HiveSessionImpl.java:479)\n\tat org.apache.hive.service.cli.session.HiveSessionImpl.executeStatementAsync(HiveSessionImpl.java:466)\n\tat sun.reflect.GeneratedMethodAccessor155.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.apache.hive.service.cli.session.HiveSessionProxy.invoke(HiveSessionProxy.java:78)\n\tat org.apache.hive.service.cli.session.HiveSessionProxy.access$000(HiveSessionProxy.java:36)\n\tat org.apache.hive.service.cli.session.HiveSessionProxy$1.run(HiveSessionProxy.java:63)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.Subject.doAs(Subject.java:422)\n\tat org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1869)\n\tat org.apache.hive.service.cli.session.HiveSessionProxy.invoke(HiveSessionProxy.java:59)\n\tat com.sun.proxy.$Proxy47.executeStatementAsync(Unknown Source)\n\tat org.apache.hive.service.cli.CLIService.executeStatementAsync(CLIService.java:315)\n\tat org.apache.hive.service.cli.thrift.ThriftCLIService.ExecuteStatement(ThriftCLIService.java:509)\n\tat org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement.getResult(TCLIService.java:1377)\n\tat org.apache.hive.service.cli.thrift.TCLIService$Processor$ExecuteStatement.getResult(TCLIService.java:1362)\n\tat org.apache.thrift.ProcessFunction.process(ProcessFunction.java:39)\n\tat org.apache.thrift.TBaseProcessor.process(TBaseProcessor.java:39)\n\tat org.apache.hadoop.hive.thrift.HadoopThriftAuthBridge$Server$TUGIAssumingProcessor.process(HadoopThriftAuthBridge.java:562)\n\tat org.apache.thrift.server.TThreadPoolServer$WorkerProcess.run(TThreadPoolServer.java:286)\n\t... 3 more\nCaused by: java.lang.RuntimeException: org.apache.hadoop.hive.ql.parse.SemanticException:Line 27:18 Invalid table alias or column reference 'SIJP17554401303': (possible column names are: paymentid, sanctionsrequestid, paymentsystem, paymenttimestamp, paymentscheme, direction, cdtdbtind, intrbksttldt, intrbksttlamt, intrbksttlccy, counterpartyacct, counterpartyagt, counterpartynm, counterpartyadr, customernm, customeracct, customeragt, customeracctid, sanctionsts, sanctionsmatch, sanctionsmatchlist, paymentmessage, tags)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genAllExprNodeDesc(SemanticAnalyzer.java:10916)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genExprNodeDesc(SemanticAnalyzer.java:10864)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genExprNodeDesc(SemanticAnalyzer.java:10832)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genFilterPlan(SemanticAnalyzer.java:2939)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genFilterPlan(SemanticAnalyzer.java:2919)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genBodyPlan(SemanticAnalyzer.java:8982)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genPlan(SemanticAnalyzer.java:9919)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genPlan(SemanticAnalyzer.java:9793)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.genOPTree(SemanticAnalyzer.java:10470)\n\tat org.apache.hadoop.hive.ql.parse.CalcitePlanner.genOPTree(CalcitePlanner.java:342)\n\tat org.apache.hadoop.hive.ql.parse.SemanticAnalyzer.analyzeInternal(SemanticAnalyzer.java:10482)\n\tat org.apache.hadoop.hive.ql.parse.CalcitePlanner.analyzeInternal(CalcitePlanner.java:219)\n\tat org.apache.hadoop.hive.ql.parse.BaseSemanticAnalyzer.analyze(BaseSemanticAnalyzer.java:238)\n\tat org.apache.hadoop.hive.ql.Driver.compile(Driver.java:465)\n\tat org.apache.hadoop.hive.ql.Driver.compile(Driver.java:321)\n\tat org.apache.hadoop.hive.ql.Driver.compileInternal(Driver.java:1224)\n\tat org.apache.hadoop.hive.ql.Driver.compileAndRespond(Driver.java:1218)\n\tat org.apache.hive.service.cli.operation.SQLOperation.prepare(SQLOperation.java:146)\n\t... 26 more\n"}]},"apps":[],"jobName":"paragraph_1541606594768_-1085348651","id":"20171201-055640_1294562238","dateCreated":"2018-11-07T16:03:14+0000","dateStarted":"2018-11-08T13:07:07+0000","dateFinished":"2018-11-08T13:07:07+0000","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:1365"},{"user":"jjimenez","dateUpdated":"2018-11-08T13:03:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1541606594770_-1084579153","id":"20180119-113057_457278860","dateCreated":"2018-11-07T16:03:14+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:1366"}],"name":"Faster Payments/FPS 20181031","id":"2DTRSQCE1","angularObjects":{"2CHS8UYQQ:shared_process":[],"2CKX6DGQZ:shared_process":[],"2DCETX3KD:shared_process":[],"2CK8A9MEG:shared_process":[{"name":"searchErrorQuery","object":"","noteId":"2DTRSQCE1","paragraphId":"20171215-093113_1835093697"},{"name":"queryRawMessages","object":"WHERE UPPER(rowkey) LIKE UPPER('%557279524899094528%')","noteId":"2DTRSQCE1","paragraphId":"20171204-093003_1765612771"},{"name":"usmQuery","object":"where usmType = 'STLMSTS' and paymenttimestamp >= '2018-11-07'","noteId":"2DTRSQCE1","paragraphId":"20171215-063115_262728712"},{"name":"sanctionsQuery","object":"where paymentId = SIJP17554401303","noteId":"2DTRSQCE1","paragraphId":"20171201-055640_1294562238"},{"name":"query","object":"where paymentId = 176058587409612800","noteId":"2DTRSQCE1","paragraphId":"20171127-080322_240439795"}],"2CKX8WPU1:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}