{"paragraphs":[{"title":"Internal Account Transfer","text":"%angular\n<div  id=\"submit-sendInternalPayment-container\">\n    <div ng-show=\"show\" ng-class=\"{'sendInternalPayment-submit-status-container-failed': !result.success, 'sendInternalPayment-submit-status-container': result.success}\">\n        <div class=\"result-header\">{{result.text}}</div>\n        <div class=\"result-details row\" ng-show=\"show\">\n            <div class=\"col-xs-3\">\n                <label>Internal Payment: </label>\n                <div>{{result.payment}}</div>\n             </div>\n        </div>\n    </div>\n\n    <form name=\"sendInternalPaymentForm\" id=\"post-sendInternalPayment-form\">\n        <div class= \"form-group\">\n            <div class=\"row\">\n                <!-- UserName -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"username\">Username: </label>\n                    <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" ng-model=\"data.username\">\n                </div>\n\n                <!-- Password -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"password\">Password: </label>\n                    <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" ng-model=\"data.password\">\n                </div>\n            </div>\n        </div>\n\n        <div class= \"form-group\">\n            <div class=\"row\">\n            <!-- Reference Info -->\n                <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !sendInternalPaymentForm.remittanceInformation.$valid && sendInternalPaymentForm.remittanceInformation.$dirty}\" >\n                    <label for=\"remittanceInformation\">Remittance Information: </label>\n                    <input type=\"text\" name=\"remittanceInformation\" class=\"form-control\" id=\"remittanceInformation\" ng-model=\"data.remittanceInformation\" ng-maxlength=\"18\">\n                    <div class=\"invalid-feedback\" ng-show=\"!sendInternalPaymentForm.remittanceInformation.$valid && sendInternalPaymentForm.remittanceInformation.$dirty\">\n                        Maximum length is 18 characters\n                    </div>\n                </div>\n\n            \n\n            <!-- End to End Reference -->\n                <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !sendInternalPaymentForm.endtoendId.$valid && sendInternalPaymentForm.endtoendId.$dirty}\">\n                    <label for=\"endtoendId\">End to End Identification: </label>\n                    <input type=\"text\" name=\"endtoendId\" class=\"form-control\" id=\"endtoendId\" ng-model=\"data.endtoendId\" ng-maxlength=\"31\">\n                     <div class=\"invalid-feedback\" ng-show=\"!sendInternalPaymentForm.endtoendId.$valid && sendInternalPaymentForm.endtoendId.$dirty\">\n                        Maximum length is 31 characters\n                    </div>\n                </div>\n            </div>\n        </div>\n\n            <div class=\"row\">\n                <!-- Currency -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"currency\">Currency: </label>\n                    <input type=\"text\" name=\"currency\" class=\"form-control\" id=\"currency\" ng-model=\"data.currency\" ng-disabled=true>\n                </div>\n\n                <!-- Settlement Amount / Instructed Amount -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"settlementAmt\">Settlement Amount: </label>\n                    <input type=\"text\" name=\"settlementAmt\" class=\"form-control\" id=\"settlementAmt\" ng-model=\"data.settlementAmt\">\n                    <span class=\"invalid-feedback\" ng-show=\"settlementAmt.$touched && data.settlementAmt == null || data.settlementAmt == ''\">This field is required</span>\n                    <span class=\"invalid-feedback\" ng-show=\"checkNumber(data.settlementAmt)\">This field must be numeric</span>\n                </div>\n            </div>\n\n\n            <!-- Debtor -->\n            <div class=\"row\"><div class=\"col-xs-12 form-group\" ><h3>Debtor Data</h3><div></div>\n\n            <div class=\"row\">\n                <!-- Debtor Account Type -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"debtorType\" id=\"debtorTypeLabel\">Debtor Account Type: </label>\n                        <select class=\"form-control\" id=\"debtorType\" ng-model=\"data.debtorType\">\n                            <option value=\"InternalAccountNumber\">Internal Account Number</option>\n                            <option value=\"IBAN\">IBAN</option>\n                            <option value=\"SortCodeAccountNumber\">Sortcode Account Number</option>\n                            <option value=\"SpecialAccountNumber\">Special Account Number</option>\n                        </select>\n                </div>\n\n                <!-- Debtor Name -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"debtorName\" id=\"debtorNameLabel\">Debtor Name: </label>\n                        <input type=\"text\" name=\"debtorName\" class=\"form-control\" id=\"debtorName\" ng-model=\"data.debtorName\">\n                </div>\n\n                <!-- Debtor Account Id -->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.debtorType !=='SpecialAccountNumber'\"\">\n                    <label for=\"dbtrAcctId\">Debtor Account Id: </label>\n                    <input type=\"text\" name=\"dbtrAcctId\" class=\"form-control\" id=\"dbtrAcctId\" ng-model=\"data.dbtrAcctId\">\n                    <span class=\"invalid-feedback\" ng-show=\"data.debtorType !== 'SpecialAccountNumber' && dbtrAcctId.$touched && data.dbtrAcctId === null || data.dbtrAcctId === ''\">This field is required</span>\n                </div>\n\n                <!-- Debtor Special Account-->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.debtorType ==='SpecialAccountNumber'\"\">\n                    <label for=\"dbtrSpecialAcct\">Debtor Special Account: </label>\n                    <select class=\"form-control\" id=\"dbtrSpecialAcct\" ng-model=\"data.dbtrSpecialAcct\">\n                            <option value=\"fps\">FPS</option>\n                            <option value=\"chaps\">CHAPS</option>\n                            <option value=\"sanctions\">Sanctions</option>                            \n                        </select>\n                </div>\n\n                                \n            </div>\n\n\n            <!-- Beneficiary -->\n            <div class=\"row\"><div class=\"col-xs-12 form-group\" ><h3>Beneficiary Data</h3><div></div>\n\n            <div class=\"row\">\n                <!-- Beneficiary Account Type -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"beneficiaryType\" id=\"beneficiaryTypeLabel\">Beneficiary Account Type: </label>\n                        <select class=\"form-control\" id=\"beneficiaryType\" ng-model=\"data.beneficiaryType\">\n                            <option value=\"InternalAccountNumber\">Internal Account Number</option>\n                            <option value=\"IBAN\">IBAN</option>\n                            <option value=\"SortCodeAccountNumber\">Sortcode Account Number</option>\n                            <option value=\"SpecialAccountNumber\">Special Account Number</option>\n                        </select>\n                </div>\n\n                <!-- Beneficiary Name -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"beneficiaryName\" id=\"beneficiaryNameLabel\">Beneficiary Name: </label>\n                        <input type=\"text\" name=\"beneficiaryName\" class=\"form-control\" id=\"beneficiaryName\" ng-model=\"data.beneficiaryName\">\n                </div>\n\n                <!-- Beneficiary Account Id -->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.beneficiaryType !=='SpecialAccountNumber'\"\">\n                    <label for=\"beneficiaryAcctId\">Beneficiary Account Id: </label>\n                    <input type=\"text\" name=\"beneficiaryAcctId\" class=\"form-control\" id=\"beneficiaryAcctId\" ng-model=\"data.beneficiaryAcctId\">\n                    <span class=\"invalid-feedback\" ng-show=\"data.beneficiaryType !=='SpecialAccountNumber' && beneficiaryAcctId.$touched && data.beneficiaryAcctId === null || data.beneficiaryAcctId === ''\">This field is required</span>\n                </div>\n\n                <!-- Beneficiary Special Account-->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.beneficiaryType ==='SpecialAccountNumber'\"\">\n                    <label for=\"beneficiarySpecialAcct\">Beneficiary Special Account: </label>\n                    <select class=\"form-control\" id=\"beneficiarySpecialAcct\" ng-model=\"data.beneficiarySpecialAcct\">\n                            <option value=\"fps\">FPS</option>\n                            <option value=\"chaps\">CHAPS</option>\n                            <option value=\"sanctions\">Sanctions</option>                            \n                        </select>\n                </div>\n\n                                \n            </div>\n\n\n            <button type=\"submit\" class=\"btn btn-primary\" onclick=\"submit_send_internal()\" ng-disabled=\"disableSendButton()\">{{submit.text}}</button>\n        </div>\n        \n    </form>\n\n    <div class=\"clear-form-button\">\n      <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n    </div>\n</div>\n\n\n\n\n\n\n\n<style media=\"screen\" type=\"text/css\">\n\n.sendInternalPayment-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.sendInternalPayment-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#submit-sendInternalPayment-container{\n    margin-top:20px; \n    margin-bottom:20px;\n    width: 98%;\n}\n\n\n.clear-form-button{\n    display: inline;\n    float: right;\n}\n\n.invalid-feedback{\n    width: 100%;\n    margin-top: .55rem;\n    font-size: 80%;\n    color: #dc3545;\n}\n</style>\n\n\n\n\n<script>\n\n    angular.element(document).ready(function () {\n        console.log('init send internal payment');\n        init_sendInternalPayment();\n    });\n\n    function init_sendInternalPayment() {\n        var scope = angular.element($(\"#submit-sendInternalPayment-container\")).scope();\n        if (typeof(scope.result)=== \"undefined\") {\n            scope.result = {\n                text: \"\",\n                payment: \"\",\n                success: false\n            };\n\n            show = false;\n            scope.submit = {\n                inprogress: false,\n                text: 'Send Internal Payment'\n            };\n\n            scope.data = {};\n\n            scope.generateInputValues = function() {\n                console.log('Initializing input values');                        \n                scope.data.currency = \"GBP\";                \n            };\n\n            scope.generateInputValues();\n\n            scope.clearForm = function(){\n                scope.data = {};\n                scope.generateInputValues();\n            }; \n\n            scope.disableSendButton = function () {\n                \n                if (scope.submit.inprogress) {\n                    return true;\n                }\n\n                if (scope.data.username === null || scope.data.username === undefined || scope.data.username === '') {\n                    return true;\n                }\n\n                if (scope.data.password === null || scope.data.password === undefined || scope.data.password === '') {\n                    return true;\n                }\n\n\n                if (scope.data.settlementAmt === null || scope.data.settlementAmt === undefined ||scope.data.settlementAmt === '' || scope.checkNumber(scope.data.settlementAmt)) {\n                    return true;\n                }\n\n                if (scope.data.debtorType === null || scope.data.debtorType === undefined ||scope.data.debtorType === '') {\n                    return true;\n                }\n\n                if (scope.data.beneficiaryType === null || scope.data.beneficiaryType === undefined ||scope.data.beneficiaryType === '') {\n                    return true;\n                }\n\n                if(scope.data.debtorType === 'SpecialAccountNumber'){                \n                    if (scope.data.dbtrSpecialAcct === null || scope.data.dbtrSpecialAcct === undefined ||scope.data.dbtrSpecialAcct === '') {\n                        return true;\n                    }\n                }else{\n                    \n                    if (scope.data.dbtrAcctId === null || scope.data.dbtrAcctId === undefined ||scope.data.dbtrAcctId === '') {\n                        return true;\n                    }\n                }\n\n                if(scope.data.beneficiaryType === 'SpecialAccountNumber'){\n                    if (scope.data.beneficiarySpecialAcct === null || scope.data.beneficiarySpecialAcct === undefined ||scope.data.beneficiarySpecialAcct === '') {\n                        return true;\n                    }\n                }else{\n                    if (scope.data.beneficiaryAcctId === null || scope.data.beneficiaryAcctId === undefined ||scope.data.beneficiaryAcctId === '') {\n                        return true;\n                    }\n                }             \n\n\n                return false;\n            };\n\n            scope.checkNumber = function(data){\n                var result = false;\n                if (data !== null && data !== undefined && data !== '') {\n                    if (isNaN(data)) {\n                        result = true;\n                    }\n                }\n                return result;\n            };\n\n\n        }\n    }\n\n    function do_ajax_query_send_internal(scope, data, token) {\n        scope.show = false;\n        scope.submit.inprogress = true;\n        scope.submit.text = \"Submitting...\";\n\n        console.log('Token: Bearer ', token);\n\n        var xhrTokenInternal = new XMLHttpRequest();\n        var url = \"https://sid-api-0.node.sid.consul:8185/bifrost/payments/internal\";\n        console.log('Send internal payment URL obtained: ' + url);\n        xhrTokenInternal.timeout = 25000; //25 seconds\n        xhrTokenInternal.open(\"POST\", url, true);\n        xhrTokenInternal.setRequestHeader('Authorization', 'Bearer ' + token);\n        xhrTokenInternal.setRequestHeader('Content-type', 'application/json');\n        xhrTokenInternal.onreadystatechange = function () {\n            if (xhrTokenInternal.readyState === 4) {\n                if (xhrTokenInternal.status === 200 || xhrTokenInternal.status === 201) {\n                    console.log('Internal payment response: ' + xhrTokenInternal.responseText);\n                    var result = JSON.parse(xhrTokenInternal.responseText);\n                    scope.result.text = \"Internal Payment sent Successfully\";\n                    scope.result.payment = xhrTokenInternal.responseText;\n                    scope.result.success = true;\n                    scope.show = true;\n                    scope.$apply(); \n                } else {\n                    scope.result.text = \"Error sending internal payment\";\n                    scope.result.payment = xhrTokenInternal.responseText;\n                    scope.result.success = false;\n                    scope.show = true;\n                    scope.$apply(); \n                }\n            }\n\n            scope.submit.inprogress = false;\n            scope.submit.text = \"Send Internal Payment\"\n        };\n\n        console.log('sending data: ' + data);\n        xhrTokenInternal.send(data);\n        \n    }\n\n    function send_internal_with_token(token, scope) {\n        if (token !== undefined && token !== null && token !== '') {\n\n            var debtorId = '';\n            var beneficiaryId = '';\n\n\n            if(scope.data.debtorType === 'SpecialAccountNumber'){\n                debtorId = scope.data.dbtrSpecialAcct;\n            }else{\n                debtorId = scope.data.dbtrAcctId;\n            }\n\n            if(scope.data.beneficiaryType === 'SpecialAccountNumber'){\n                beneficiaryId = scope.data.beneficiarySpecialAcct;\n            }else{\n                beneficiaryId = scope.data.beneficiaryAcctId;\n            }\n\n            var data = JSON.stringify(\n            {\n                'data': {\n                    'initiation': {\n                        'instructedAmount': {\n                            'amount': scope.data.settlementAmt,\n                            'currency': scope.data.currency\n                        },\n                        'debtorAccount': {\n                            'schemeName': scope.data.debtorType,\n                            'identification': debtorId\n                        },\n                        'creditorAccount': {\n                            'schemeName': scope.data.beneficiaryType,\n                            'identification': beneficiaryId\n                        },\n                        'endToEndIdentification': scope.data.endtoendId\n                    }\n                },\n                \n                'debtor' :{\n                    'nm':scope.data.debtorName,\n                } ,                \n                'creditor' :{\n                    'nm':scope.data.beneficiaryName,\n                } ,                \n                'remittanceInformation' : {\n                    'reference': scope.data.remittanceInformation\n                }\n                \n            });\n\n            console.log('Data: ' + JSON.stringify(data));\n            \n\n            do_ajax_query_send_internal(scope, data, token.trim());\n        }\n    }\n\n    function do_ajax_query_send_token(scope, data) {\n        scope.show = false;\n        scope.submit.inprogress = true;\n        scope.submit.text = \"Submitting...\";\n        var token = '';\n\n        var xhr = new XMLHttpRequest();\n        var url = \"https://sid-api-0.node.sid.consul:8285/bifrost/login\";\n        console.log('Get user token URL obtained: ' + url);\n        xhr.timeout = 25000; //25 seconds\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    console.log('Internal payment response: ' + xhr.responseText);\n                    var result = JSON.parse(xhr.responseText);\n                    token = result.access_token;\n                    console.log('Token retrieved: ' + token);\n                    send_internal_with_token(token, scope);\n                } else {\n                    scope.result.text = \"Error getting token\";\n                    scope.result.payment = xhr.responseText;\n                    scope.result.success = false;\n                    scope.submit.inprogress = false;\n                    scope.submit.text = \"Send Internal Payment\";\n                    scope.show = true;\n                    scope.$apply(); \n                }\n            }\n        };\n\n        console.log('sending data: ' + data);\n        xhr.send(data);\n    }\n\n    function submit_send_internal(token) {\n        var scope = angular.element($(\"#submit-sendInternalPayment-container\")).scope();\n\n        var tokenData = JSON.stringify(\n        {\n            'usr': scope.data.username,\n            'pwd' : scope.data.password\n        });\n\n        var token = '';\n        do_ajax_query_send_token(scope, tokenData);\n    }\n    \n</script>","user":"admin","dateUpdated":"2018-12-24T10:41:06+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","editorHide":true,"title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div  id=\"submit-sendInternalPayment-container\">\n    <div ng-show=\"show\" ng-class=\"{'sendInternalPayment-submit-status-container-failed': !result.success, 'sendInternalPayment-submit-status-container': result.success}\">\n        <div class=\"result-header\">{{result.text}}</div>\n        <div class=\"result-details row\" ng-show=\"show\">\n            <div class=\"col-xs-3\">\n                <label>Internal Payment: </label>\n                <div>{{result.payment}}</div>\n             </div>\n        </div>\n    </div>\n\n    <form name=\"sendInternalPaymentForm\" id=\"post-sendInternalPayment-form\">\n        <div class= \"form-group\">\n            <div class=\"row\">\n                <!-- UserName -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"username\">Username: </label>\n                    <input type=\"text\" name=\"username\" class=\"form-control\" id=\"username\" ng-model=\"data.username\">\n                </div>\n\n                <!-- Password -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"password\">Password: </label>\n                    <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password\" ng-model=\"data.password\">\n                </div>\n            </div>\n        </div>\n\n        <div class= \"form-group\">\n            <div class=\"row\">\n            <!-- Reference Info -->\n                <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !sendInternalPaymentForm.remittanceInformation.$valid && sendInternalPaymentForm.remittanceInformation.$dirty}\" >\n                    <label for=\"remittanceInformation\">Remittance Information: </label>\n                    <input type=\"text\" name=\"remittanceInformation\" class=\"form-control\" id=\"remittanceInformation\" ng-model=\"data.remittanceInformation\" ng-maxlength=\"18\">\n                    <div class=\"invalid-feedback\" ng-show=\"!sendInternalPaymentForm.remittanceInformation.$valid && sendInternalPaymentForm.remittanceInformation.$dirty\">\n                        Maximum length is 18 characters\n                    </div>\n                </div>\n\n            \n\n            <!-- End to End Reference -->\n                <div class=\"col-xs-4 form-group\" ng-class=\"{'has-error': !sendInternalPaymentForm.endtoendId.$valid && sendInternalPaymentForm.endtoendId.$dirty}\">\n                    <label for=\"endtoendId\">End to End Identification: </label>\n                    <input type=\"text\" name=\"endtoendId\" class=\"form-control\" id=\"endtoendId\" ng-model=\"data.endtoendId\" ng-maxlength=\"31\">\n                     <div class=\"invalid-feedback\" ng-show=\"!sendInternalPaymentForm.endtoendId.$valid && sendInternalPaymentForm.endtoendId.$dirty\">\n                        Maximum length is 31 characters\n                    </div>\n                </div>\n            </div>\n        </div>\n\n            <div class=\"row\">\n                <!-- Currency -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"currency\">Currency: </label>\n                    <input type=\"text\" name=\"currency\" class=\"form-control\" id=\"currency\" ng-model=\"data.currency\" ng-disabled=true>\n                </div>\n\n                <!-- Settlement Amount / Instructed Amount -->\n                <div class=\"col-xs-3 form-group\" >\n                    <label for=\"settlementAmt\">Settlement Amount: </label>\n                    <input type=\"text\" name=\"settlementAmt\" class=\"form-control\" id=\"settlementAmt\" ng-model=\"data.settlementAmt\">\n                    <span class=\"invalid-feedback\" ng-show=\"settlementAmt.$touched && data.settlementAmt == null || data.settlementAmt == ''\">This field is required</span>\n                    <span class=\"invalid-feedback\" ng-show=\"checkNumber(data.settlementAmt)\">This field must be numeric</span>\n                </div>\n            </div>\n\n\n            <!-- Debtor -->\n            <div class=\"row\"><div class=\"col-xs-12 form-group\" ><h3>Debtor Data</h3><div></div>\n\n            <div class=\"row\">\n                <!-- Debtor Account Type -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"debtorType\" id=\"debtorTypeLabel\">Debtor Account Type: </label>\n                        <select class=\"form-control\" id=\"debtorType\" ng-model=\"data.debtorType\">\n                            <option value=\"InternalAccountNumber\">Internal Account Number</option>\n                            <option value=\"IBAN\">IBAN</option>\n                            <option value=\"SortCodeAccountNumber\">Sortcode Account Number</option>\n                            <option value=\"SpecialAccountNumber\">Special Account Number</option>\n                        </select>\n                </div>\n\n                <!-- Debtor Name -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"debtorName\" id=\"debtorNameLabel\">Debtor Name: </label>\n                        <input type=\"text\" name=\"debtorName\" class=\"form-control\" id=\"debtorName\" ng-model=\"data.debtorName\">\n                </div>\n\n                <!-- Debtor Account Id -->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.debtorType !=='SpecialAccountNumber'\"\">\n                    <label for=\"dbtrAcctId\">Debtor Account Id: </label>\n                    <input type=\"text\" name=\"dbtrAcctId\" class=\"form-control\" id=\"dbtrAcctId\" ng-model=\"data.dbtrAcctId\">\n                    <span class=\"invalid-feedback\" ng-show=\"data.debtorType !== 'SpecialAccountNumber' && dbtrAcctId.$touched && data.dbtrAcctId === null || data.dbtrAcctId === ''\">This field is required</span>\n                </div>\n\n                <!-- Debtor Special Account-->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.debtorType ==='SpecialAccountNumber'\"\">\n                    <label for=\"dbtrSpecialAcct\">Debtor Special Account: </label>\n                    <select class=\"form-control\" id=\"dbtrSpecialAcct\" ng-model=\"data.dbtrSpecialAcct\">\n                            <option value=\"fps\">FPS</option>\n                            <option value=\"chaps\">CHAPS</option>\n                            <option value=\"sanctions\">Sanctions</option>                            \n                        </select>\n                </div>\n\n                                \n            </div>\n\n\n            <!-- Beneficiary -->\n            <div class=\"row\"><div class=\"col-xs-12 form-group\" ><h3>Beneficiary Data</h3><div></div>\n\n            <div class=\"row\">\n                <!-- Beneficiary Account Type -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"beneficiaryType\" id=\"beneficiaryTypeLabel\">Beneficiary Account Type: </label>\n                        <select class=\"form-control\" id=\"beneficiaryType\" ng-model=\"data.beneficiaryType\">\n                            <option value=\"InternalAccountNumber\">Internal Account Number</option>\n                            <option value=\"IBAN\">IBAN</option>\n                            <option value=\"SortCodeAccountNumber\">Sortcode Account Number</option>\n                            <option value=\"SpecialAccountNumber\">Special Account Number</option>\n                        </select>\n                </div>\n\n                <!-- Beneficiary Name -->\n                <div class=\"col-xs-3 form-group\">\n                     <label for=\"beneficiaryName\" id=\"beneficiaryNameLabel\">Beneficiary Name: </label>\n                        <input type=\"text\" name=\"beneficiaryName\" class=\"form-control\" id=\"beneficiaryName\" ng-model=\"data.beneficiaryName\">\n                </div>\n\n                <!-- Beneficiary Account Id -->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.beneficiaryType !=='SpecialAccountNumber'\"\">\n                    <label for=\"beneficiaryAcctId\">Beneficiary Account Id: </label>\n                    <input type=\"text\" name=\"beneficiaryAcctId\" class=\"form-control\" id=\"beneficiaryAcctId\" ng-model=\"data.beneficiaryAcctId\">\n                    <span class=\"invalid-feedback\" ng-show=\"data.beneficiaryType !=='SpecialAccountNumber' && beneficiaryAcctId.$touched && data.beneficiaryAcctId === null || data.beneficiaryAcctId === ''\">This field is required</span>\n                </div>\n\n                <!-- Beneficiary Special Account-->\n                <div class=\"col-xs-3 form-group\" ng-show=\"data.beneficiaryType ==='SpecialAccountNumber'\"\">\n                    <label for=\"beneficiarySpecialAcct\">Beneficiary Special Account: </label>\n                    <select class=\"form-control\" id=\"beneficiarySpecialAcct\" ng-model=\"data.beneficiarySpecialAcct\">\n                            <option value=\"fps\">FPS</option>\n                            <option value=\"chaps\">CHAPS</option>\n                            <option value=\"sanctions\">Sanctions</option>                            \n                        </select>\n                </div>\n\n                                \n            </div>\n\n\n            <button type=\"submit\" class=\"btn btn-primary\" onclick=\"submit_send_internal()\" ng-disabled=\"disableSendButton()\">{{submit.text}}</button>\n        </div>\n        \n    </form>\n\n    <div class=\"clear-form-button\">\n      <button class=\"btn\" ng-click=\"clearForm()\">Clear Form</button>\n    </div>\n</div>\n\n\n\n\n\n\n\n<style media=\"screen\" type=\"text/css\">\n\n.sendInternalPayment-submit-status-container {\n    background-color: #def9db;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n}\n\n.sendInternalPayment-submit-status-container-failed{\n    background-color: #900C3F;\n    margin-left: 0px;\n    margin-top: 10px;\n    padding: 10px;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    color: #f2f2f2;\n}\n\n.result-header{\n    margin-bottom: 15px;\n    font-size: 16px;\n    letter-spacing: 3px;\n}\n\n#submit-sendInternalPayment-container{\n    margin-top:20px; \n    margin-bottom:20px;\n    width: 98%;\n}\n\n\n.clear-form-button{\n    display: inline;\n    float: right;\n}\n\n.invalid-feedback{\n    width: 100%;\n    margin-top: .55rem;\n    font-size: 80%;\n    color: #dc3545;\n}\n</style>\n\n\n\n\n<script>\n\n    angular.element(document).ready(function () {\n        console.log('init send internal payment');\n        init_sendInternalPayment();\n    });\n\n    function init_sendInternalPayment() {\n        var scope = angular.element($(\"#submit-sendInternalPayment-container\")).scope();\n        if (typeof(scope.result)=== \"undefined\") {\n            scope.result = {\n                text: \"\",\n                payment: \"\",\n                success: false\n            };\n\n            show = false;\n            scope.submit = {\n                inprogress: false,\n                text: 'Send Internal Payment'\n            };\n\n            scope.data = {};\n\n            scope.generateInputValues = function() {\n                console.log('Initializing input values');                        \n                scope.data.currency = \"GBP\";                \n            };\n\n            scope.generateInputValues();\n\n            scope.clearForm = function(){\n                scope.data = {};\n                scope.generateInputValues();\n            }; \n\n            scope.disableSendButton = function () {\n                \n                if (scope.submit.inprogress) {\n                    return true;\n                }\n\n                if (scope.data.username === null || scope.data.username === undefined || scope.data.username === '') {\n                    return true;\n                }\n\n                if (scope.data.password === null || scope.data.password === undefined || scope.data.password === '') {\n                    return true;\n                }\n\n\n                if (scope.data.settlementAmt === null || scope.data.settlementAmt === undefined ||scope.data.settlementAmt === '' || scope.checkNumber(scope.data.settlementAmt)) {\n                    return true;\n                }\n\n                if (scope.data.debtorType === null || scope.data.debtorType === undefined ||scope.data.debtorType === '') {\n                    return true;\n                }\n\n                if (scope.data.beneficiaryType === null || scope.data.beneficiaryType === undefined ||scope.data.beneficiaryType === '') {\n                    return true;\n                }\n\n                if(scope.data.debtorType === 'SpecialAccountNumber'){                \n                    if (scope.data.dbtrSpecialAcct === null || scope.data.dbtrSpecialAcct === undefined ||scope.data.dbtrSpecialAcct === '') {\n                        return true;\n                    }\n                }else{\n                    \n                    if (scope.data.dbtrAcctId === null || scope.data.dbtrAcctId === undefined ||scope.data.dbtrAcctId === '') {\n                        return true;\n                    }\n                }\n\n                if(scope.data.beneficiaryType === 'SpecialAccountNumber'){\n                    if (scope.data.beneficiarySpecialAcct === null || scope.data.beneficiarySpecialAcct === undefined ||scope.data.beneficiarySpecialAcct === '') {\n                        return true;\n                    }\n                }else{\n                    if (scope.data.beneficiaryAcctId === null || scope.data.beneficiaryAcctId === undefined ||scope.data.beneficiaryAcctId === '') {\n                        return true;\n                    }\n                }             \n\n\n                return false;\n            };\n\n            scope.checkNumber = function(data){\n                var result = false;\n                if (data !== null && data !== undefined && data !== '') {\n                    if (isNaN(data)) {\n                        result = true;\n                    }\n                }\n                return result;\n            };\n\n\n        }\n    }\n\n    function do_ajax_query_send_internal(scope, data, token) {\n        scope.show = false;\n        scope.submit.inprogress = true;\n        scope.submit.text = \"Submitting...\";\n\n        console.log('Token: Bearer ', token);\n\n        var xhrTokenInternal = new XMLHttpRequest();\n        var url = \"https://sid-api-0.node.sid.consul:8185/bifrost/payments/internal\";\n        console.log('Send internal payment URL obtained: ' + url);\n        xhrTokenInternal.timeout = 25000; //25 seconds\n        xhrTokenInternal.open(\"POST\", url, true);\n        xhrTokenInternal.setRequestHeader('Authorization', 'Bearer ' + token);\n        xhrTokenInternal.setRequestHeader('Content-type', 'application/json');\n        xhrTokenInternal.onreadystatechange = function () {\n            if (xhrTokenInternal.readyState === 4) {\n                if (xhrTokenInternal.status === 200 || xhrTokenInternal.status === 201) {\n                    console.log('Internal payment response: ' + xhrTokenInternal.responseText);\n                    var result = JSON.parse(xhrTokenInternal.responseText);\n                    scope.result.text = \"Internal Payment sent Successfully\";\n                    scope.result.payment = xhrTokenInternal.responseText;\n                    scope.result.success = true;\n                    scope.show = true;\n                    scope.$apply(); \n                } else {\n                    scope.result.text = \"Error sending internal payment\";\n                    scope.result.payment = xhrTokenInternal.responseText;\n                    scope.result.success = false;\n                    scope.show = true;\n                    scope.$apply(); \n                }\n            }\n\n            scope.submit.inprogress = false;\n            scope.submit.text = \"Send Internal Payment\"\n        };\n\n        console.log('sending data: ' + data);\n        xhrTokenInternal.send(data);\n        \n    }\n\n    function send_internal_with_token(token, scope) {\n        if (token !== undefined && token !== null && token !== '') {\n\n            var debtorId = '';\n            var beneficiaryId = '';\n\n\n            if(scope.data.debtorType === 'SpecialAccountNumber'){\n                debtorId = scope.data.dbtrSpecialAcct;\n            }else{\n                debtorId = scope.data.dbtrAcctId;\n            }\n\n            if(scope.data.beneficiaryType === 'SpecialAccountNumber'){\n                beneficiaryId = scope.data.beneficiarySpecialAcct;\n            }else{\n                beneficiaryId = scope.data.beneficiaryAcctId;\n            }\n\n            var data = JSON.stringify(\n            {\n                'data': {\n                    'initiation': {\n                        'instructedAmount': {\n                            'amount': scope.data.settlementAmt,\n                            'currency': scope.data.currency\n                        },\n                        'debtorAccount': {\n                            'schemeName': scope.data.debtorType,\n                            'identification': debtorId\n                        },\n                        'creditorAccount': {\n                            'schemeName': scope.data.beneficiaryType,\n                            'identification': beneficiaryId\n                        },\n                        'endToEndIdentification': scope.data.endtoendId\n                    }\n                },\n                \n                'debtor' :{\n                    'nm':scope.data.debtorName,\n                } ,                \n                'creditor' :{\n                    'nm':scope.data.beneficiaryName,\n                } ,                \n                'remittanceInformation' : {\n                    'reference': scope.data.remittanceInformation\n                }\n                \n            });\n\n            console.log('Data: ' + JSON.stringify(data));\n            \n\n            do_ajax_query_send_internal(scope, data, token.trim());\n        }\n    }\n\n    function do_ajax_query_send_token(scope, data) {\n        scope.show = false;\n        scope.submit.inprogress = true;\n        scope.submit.text = \"Submitting...\";\n        var token = '';\n\n        var xhr = new XMLHttpRequest();\n        var url = \"https://sid-api-0.node.sid.consul:8285/bifrost/login\";\n        console.log('Get user token URL obtained: ' + url);\n        xhr.timeout = 25000; //25 seconds\n        xhr.open(\"POST\", url, true);\n        xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status === 200) {\n                    console.log('Internal payment response: ' + xhr.responseText);\n                    var result = JSON.parse(xhr.responseText);\n                    token = result.access_token;\n                    console.log('Token retrieved: ' + token);\n                    send_internal_with_token(token, scope);\n                } else {\n                    scope.result.text = \"Error getting token\";\n                    scope.result.payment = xhr.responseText;\n                    scope.result.success = false;\n                    scope.submit.inprogress = false;\n                    scope.submit.text = \"Send Internal Payment\";\n                    scope.show = true;\n                    scope.$apply(); \n                }\n            }\n        };\n\n        console.log('sending data: ' + data);\n        xhr.send(data);\n    }\n\n    function submit_send_internal(token) {\n        var scope = angular.element($(\"#submit-sendInternalPayment-container\")).scope();\n\n        var tokenData = JSON.stringify(\n        {\n            'usr': scope.data.username,\n            'pwd' : scope.data.password\n        });\n\n        var token = '';\n        do_ajax_query_send_token(scope, tokenData);\n    }\n    \n</script>"}]},"apps":[],"jobName":"paragraph_1545648062630_-739493991","id":"20181105-104751_1838253466","dateCreated":"2018-12-24T10:41:02+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:26302"},{"text":"%angular\n","user":"admin","dateUpdated":"2018-12-24T10:41:02+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/undefined","results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1545648062633_-1932355806","id":"20181105-104809_524491123","dateCreated":"2018-12-24T10:41:02+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:26303"}],"name":"Development/Jorge/R4.D/IAT","id":"2E1DEQK9D","noteParams":{},"noteForms":{},"angularObjects":{"angular:shared_process":[],"jdbc:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}